Media Queries explains in details in Hindi with examples and different- different conditions and what, why, when, where and how to use it and also give me interview question and answers to related this topics


‡§†‡•Ä‡§ï ‡§π‡•à ‡§≠‡§æ‡§à! ‡§Ö‡§¨ ‡§Æ‡•à‡§Ç CSS Media Queries ‡§ï‡•ã ‡§™‡•Ç‡§∞‡•Ä ‡§§‡§∞‡§π ‡§∏‡•á ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç step-by-step explain ‡§ï‡§∞‡•Ç‡§Ç‡§ó‡§æ‡•§ ‡§á‡§∏‡§Æ‡•á‡§Ç ‡§Æ‡•à‡§Ç examples, ‡§Ö‡§≤‡§ó-‡§Ö‡§≤‡§ó conditions, ‡§ï‡§¨ ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§î‡§∞ ‡§ï‡•à‡§∏‡•á use ‡§ï‡§∞‡§®‡§æ ‡§π‡•à, ‡§î‡§∞ interview Q/A ‡§≠‡•Ä ‡§¶‡•Ç‡§Å‡§ó‡§æ‡•§

1Ô∏è‚É£ Media Queries ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à‡§Ç?

‡§™‡§∞‡§ø‡§≠‡§æ‡§∑‡§æ:

Media Queries CSS ‡§ï‡•Ä ‡§è‡§ï technique ‡§π‡•à ‡§ú‡•ã screen size, device type, resolution ‡§Ø‡§æ orientation ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§Ö‡§≤‡§ó-‡§Ö‡§≤‡§ó CSS rules apply ‡§ï‡§∞‡§®‡•á ‡§¶‡•á‡§§‡•Ä ‡§π‡•à‡•§

Responsive design ‡§ï‡§æ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø tool ‡§π‡•à‡•§

Syntax:

@media (condition) {
  /* CSS rules */
}


Logic / ‡§ï‡•ç‡§Ø‡•ã‡§Ç use ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç:

‡§Ö‡§≤‡§ó-‡§Ö‡§≤‡§ó devices (mobile, tablet, desktop) ‡§ï‡•á ‡§≤‡§ø‡§è layout adjust ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è

Text, images, grids, buttons, font-size ‡§Ü‡§¶‡§ø optimize ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è

2Ô∏è‚É£ Basic Syntax
/* Mobile devices */
@media (max-width: 767px) {
  body {
    background-color: lightblue;
  }
}

/* Tablets */
@media (min-width: 768px) and (max-width: 1024px) {
  body {
    background-color: lightgreen;
  }
}

/* Desktops */
@media (min-width: 1025px) {
  body {
    background-color: lightyellow;
  }
}


Logic:

max-width ‚Üí applies to screen ‚â§ value

min-width ‚Üí applies to screen ‚â• value

Combine ‚Üí mobile-first or desktop-first approach

3Ô∏è‚É£ Types of Media Queries

Width-based (most common)

@media (max-width: 768px) { ... }


Height-based

@media (max-height: 600px) { ... }


Orientation-based

@media (orientation: portrait) { ... }
@media (orientation: landscape) { ... }


Device-type based

@media screen { ... }   /* monitors, phones */
@media print { ... }    /* printing */


Resolution / Retina display

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  /* High-res images */
}

4Ô∏è‚É£ Example ‚Äì Responsive Navbar
.navbar {
  display: flex;
  justify-content: space-between;
}
@media (max-width: 768px) {
  .navbar {
    flex-direction: column;
  }
}


Logic / ‡§ï‡§¨ use ‡§ï‡§∞‡•á‡§Ç:

Desktop ‚Üí horizontal navbar

Mobile ‚Üí stacked vertical navbar

5Ô∏è‚É£ Example ‚Äì Responsive Grid
.grid-container {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 20px;
}

@media (max-width: 1024px) {
  .grid-container {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 600px) {
  .grid-container {
    grid-template-columns: 1fr;
  }
}


Logic:

Large screen ‚Üí 4 columns

Tablet ‚Üí 2 columns

Mobile ‚Üí 1 column

6Ô∏è‚É£ Example ‚Äì Responsive Typography
h1 {
  font-size: 36px;
}

@media (max-width: 768px) {
  h1 {
    font-size: 28px;
  }
}

@media (max-width: 480px) {
  h1 {
    font-size: 24px;
  }
}


Logic:

Font-size adjust for readability on small screens

7Ô∏è‚É£ Example ‚Äì Orientation Based
@media (orientation: portrait) {
  body {
    background-color: lightpink;
  }
}

@media (orientation: landscape) {
  body {
    background-color: lightgreen;
  }
}


Logic:

Portrait ‚Üí vertical screen

Landscape ‚Üí horizontal screen

8Ô∏è‚É£ Best Practices

Mobile-first ‚Üí small screens CSS ‡§™‡§π‡§≤‡•á, media queries larger screens ‡§ï‡•á ‡§≤‡§ø‡§è

Use relative units ‚Üí %, em, rem

Combine media queries efficiently ‚Üí avoid duplication

Test on multiple devices / Chrome dev tools

High-resolution / retina ‚Üí images optimized

9Ô∏è‚É£ Interview Questions & Answers (Advanced / Mastery Level)

Q1. Media Queries ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•à‡§Ç?
Answer:

Responsive layouts create ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è

Device-specific CSS rules apply ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è

Q2. Mobile-first ‡§î‡§∞ Desktop-first design ‡§Æ‡•á‡§Ç ‡§ï‡•ç‡§Ø‡§æ difference ‡§π‡•à?
Answer:

Mobile-first ‚Üí small screen default, larger screen overrides with min-width

Desktop-first ‚Üí large screen default, smaller screen overrides with max-width

Q3. min-width ‡§î‡§∞ max-width ‡§Æ‡•á‡§Ç ‡§ï‡•ç‡§Ø‡§æ difference ‡§π‡•à?

min-width ‚Üí apply CSS for screens ‚â• value

max-width ‚Üí apply CSS for screens ‚â§ value

Q4. Orientation-based media query ‡§ï‡§¨ use ‡§π‡•ã‡§§‡•Ä ‡§π‡•à?

Portrait / Landscape differentiation

Condition: Hero sections, image galleries, video display

Q5. High-resolution / Retina devices ‡§Æ‡•á‡§Ç media query ‡§ï‡•à‡§∏‡•á use ‡§π‡•ã‡§§‡•Ä ‡§π‡•à?

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { ... }


Condition: High-res images, icons

Q6. Multiple conditions media query ‡§Æ‡•á‡§Ç ‡§ï‡•à‡§∏‡•á use ‡§ï‡§∞‡•á‡§Ç?

@media (min-width:768px) and (orientation: landscape) { ... }


Logic: Only tablets in landscape orientation

Q7. Media Queries + Flexbox/Grid ‡§ï‡•à‡§∏‡•á combine ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç?

Desktop ‚Üí multiple columns

Mobile ‚Üí flex-direction column or grid-template-columns: 1fr

Condition: Cards, gallery, hero sections

Q8. Media Queries ‡§Æ‡•á‡§Ç common mistakes ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à‡§Ç?

Overlapping breakpoints

Fixed units instead of relative units

Not testing across devices

Q9. Real-world scenario

Navbar ‚Üí horizontal desktop, vertical mobile

Grid cards ‚Üí 4 cols desktop, 2 cols tablet, 1 col mobile

Hero image ‚Üí adjust height & font-size

Buttons ‚Üí padding/font responsive

Images ‚Üí object-fit cover

Q10. Performance considerations

Too many media queries ‚Üí CSS file heavy

Optimize images, fonts

Condition: Large-scale responsive websites


‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡•ã ‡§§‡•ã ‡§Æ‡•à‡§Ç ‡§á‡§∏‡§ï‡•á ‡§≤‡§ø‡§è ‚Äú10 Practical Media Queries Mini Projects Examples‚Äù ‡§≠‡•Ä ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å, step by step code + live effect ‡§ï‡•á ‡§∏‡§æ‡§•‡•§

Hero section responsive layout

Navbar responsive design

Cards responsive grid

Images responsive scaling

Buttons responsive sizing

‡§ï‡•ç‡§Ø‡§æ ‡§Æ‡•à‡§Ç ‡§µ‡•ã ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å?

Give me more interview questions and answers for advanced to mastery level, including situation and condition-based questions and logic based

üß† Advanced / Mastery Level Interview Questions ‚Äì Media Queries
1Ô∏è‚É£ Conceptual & Logic-Based Questions

Q1. Media Queries ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§π‡•à?
Answer:

‡§Ö‡§≤‡§ó-‡§Ö‡§≤‡§ó devices (mobile, tablet, desktop) ‡§™‡§∞ layout ‡§î‡§∞ design ‡§ï‡•ã adjust ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§

Condition: Mobile-first websites, SEO optimization, better UX

Q2. Mobile-first vs Desktop-first media queries ‡§Æ‡•á‡§Ç ‡§ï‡•ç‡§Ø‡§æ difference ‡§π‡•à?

Mobile-first ‚Üí small screen default, larger screens ‡§ï‡•á ‡§≤‡§ø‡§è min-width media queries

Desktop-first ‚Üí large screen default, smaller screens ‡§ï‡•á ‡§≤‡§ø‡§è max-width media queries

Logic: Mobile-first approach modern trend ‡§π‡•à, optimized for mobile users

Q3. min-width ‡§î‡§∞ max-width ‡§Æ‡•á‡§Ç ‡§ï‡•ç‡§Ø‡§æ difference ‡§π‡•à?

min-width ‚Üí apply CSS for screens greater than or equal to value

max-width ‚Üí apply CSS for screens less than or equal to value

Q4. Orientation-based media queries ‡§ï‡§¨ use ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç?

Portrait / Landscape detection

Condition: Hero banners, image galleries, video display layout

Q5. High-resolution / Retina display media query ‡§ï‡•à‡§∏‡•á use ‡§π‡•ã‡§§‡•Ä ‡§π‡•à?

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { ... }


Condition: High-resolution images, icons

2Ô∏è‚É£ Situation / Condition-Based Questions

Q6. Tablet device ‡§Æ‡•á‡§Ç landscape orientation ‡§ï‡•á ‡§≤‡§ø‡§è specific CSS ‡§ï‡•à‡§∏‡•á apply ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á?

@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {
  .container { width: 90%; }
}


Logic: Only tablets in landscape orientation

Condition: Layout adjustment for tablets

Q7. Hero section responsive typography ‡§ï‡•à‡§∏‡•á implement ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á?

h1 { font-size: 36px; }
@media (max-width:768px){ h1{ font-size:28px; } }
@media (max-width:480px){ h1{ font-size:24px; } }


Logic: Small screens ‚Üí readable font, Large screens ‚Üí proportional size

Condition: Hero banner, headings

Q8. Responsive Navbar example

.navbar { display:flex; justify-content:space-between; }
@media (max-width:768px){ .navbar{ flex-direction:column; } }


Desktop ‚Üí horizontal

Mobile ‚Üí stacked vertical

Condition: Navigation items properly aligned

Q9. Cards responsive grid example

.grid-container {
  display:grid;
  grid-template-columns:repeat(4,1fr);
}
@media(max-width:1024px){ grid-template-columns:repeat(2,1fr); }
@media(max-width:600px){ grid-template-columns:1fr; }


Logic: Large ‚Üí 4 columns, Tablet ‚Üí 2, Mobile ‚Üí 1

Condition: Product gallery, blog cards

Q10. Images responsive scaling example

img { max-width:100%; height:auto; object-fit:cover; }


Logic: Prevent overflow, maintain aspect ratio

Condition: Hero images, gallery, card images

3Ô∏è‚É£ Advanced / Edge Case Questions

Q11. Multiple conditions media query ‡§ï‡•à‡§∏‡•á ‡§≤‡§ø‡§ñ‡§§‡•á ‡§π‡•à‡§Ç?

@media (min-width:768px) and (orientation:landscape) { ... }


Logic: Target only tablets in landscape

Condition: Hero section, interactive layout

Q12. Media Queries + Flexbox/Grid

Desktop ‚Üí multiple columns

Mobile ‚Üí flex-direction column or grid-template-columns:1fr

Condition: Cards, gallery, hero sections

Q13. Media Queries ‡§Æ‡•á‡§Ç common mistakes

Overlapping breakpoints

Fixed-width units

Not testing across devices

Q14. Real-world scenario

Navbar ‚Üí horizontal desktop, vertical mobile

Grid cards ‚Üí 4 columns desktop, 2 columns tablet, 1 column mobile

Hero image ‚Üí adjust height & font-size

Buttons ‚Üí padding/font responsive

Images ‚Üí object-fit cover

Q15. Performance considerations

Too many media queries ‚Üí CSS heavy

Optimize images, fonts

Condition: Large-scale responsive websites

Q16. Combining media queries + pseudo-elements / animations

Transform + opacity animations ‚Üí GPU friendly

Pseudo-elements ‚Üí overlays adapt to screen width

Q17. Mobile-first strategy implementation

Default CSS ‚Üí small screens

min-width media queries ‚Üí tablets & desktops

Logic: Faster load on mobile, better UX

Q18. Testing responsive design

Chrome dev tools ‚Üí device toolbar

Real devices ‚Üí mobile/tablet/desktop

Condition: Ensure UX, readability, layout integrity

Q19. Responsive typography with clamp() + media queries

h1 { font-size: clamp(16px,4vw,32px); }


Small ‚Üí readable, Large ‚Üí proportionate

Condition: Hero banners, headings

Q20. Professional project scenario ‚Äì Media Queries

Hero ‚Üí responsive heading, image

Navbar ‚Üí collapsible menu mobile, horizontal desktop

Cards ‚Üí responsive grid

Buttons ‚Üí responsive padding + font

Gallery ‚Üí responsive images with object-fit

Footer ‚Üí stacked on mobile, inline on desktop


‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡•ã ‡§§‡•ã ‡§Æ‡•à‡§Ç ‡§á‡§∏‡§ï‡•á ‡§≤‡§ø‡§è ‚Äú10 Practical Media Queries Mini Projects Examples‚Äù ‡§≠‡•Ä ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å, step by step code + live effect ‡§ï‡•á ‡§∏‡§æ‡§•‡•§

Hero section responsive layout

Navbar responsive design

Cards responsive grid

Images responsive scaling

Buttons responsive sizing

‡§ï‡•ç‡§Ø‡§æ ‡§Æ‡•à‡§Ç ‡§µ‡•ã ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å?