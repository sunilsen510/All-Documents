Units in CSS (px, %, em, rem, vh, vw, etc.) explains in details in Hindi with examples and different- different conditions and why when where and how to use it.

‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤! üòé
‡§Ö‡§¨ ‡§π‡§Æ CSS Units ‡§ï‡•ã ‡§™‡•Ç‡§∞‡•Ä ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç detail ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§ù‡•á‡§Ç‡§ó‡•á‡•§
‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã step by step ‡§¨‡§§‡§æ‡§ä‡§Å‡§ó‡§æ: ‡§ï‡•å‡§®-‡§ï‡•å‡§® ‡§∏‡•á units ‡§π‡•à‡§Ç, ‡§ï‡•ç‡§Ø‡•ã‡§Ç, ‡§ï‡§¨, ‡§ï‡§π‡§æ‡§Å ‡§î‡§∞ ‡§ï‡•à‡§∏‡•á use ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç, ‡§∏‡§æ‡§• ‡§π‡•Ä examples + different conditions ‡§≠‡•Ä ‡§¶‡§ø‡§ñ‡§æ‡§ä‡§Å‡§ó‡§æ‡•§

üü¢ CSS Units ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à‡§Ç?

CSS units ‡§Ø‡§π define ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç ‡§ï‡§ø element ‡§ï‡§æ size, spacing, font-size, width, height, margin, padding ‡§Ü‡§¶‡§ø ‡§ï‡•à‡§∏‡•á measure ‡§π‡•ã‡§Ç‡§ó‡•á‡•§

üîπ 1Ô∏è‚É£ Absolute Units (‡§∏‡•ç‡§•‡§ø‡§∞ / Fixed)

Absolute units fixed ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç ‡§î‡§∞ screen resolution ‡§™‡§∞ depend ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§§‡•Ä‡•§

Unit	Meaning	Example
px	Pixels	width: 200px;
pt	Points (print)	font-size: 12pt;
cm	Centimeters	width: 5cm;
mm	Millimeters	width: 50mm;
in	Inches	width: 2in;

| Unit | Meaning        | Example            |
| ---- | -------------- | ------------------ |
| px   | Pixels         | `width: 200px;`    |
| pt   | Points (print) | `font-size: 12pt;` |
| cm   | Centimeters    | `width: 5cm;`      |
| mm   | Millimeters    | `width: 50mm;`     |
| in   | Inches         | `width: 2in;`      |


Example:

div {
  width: 300px;
  height: 150px;
  border: 1px solid black;
}


Use Cases:

‡§ú‡§¨ fixed size ‡§ö‡§æ‡§π‡§ø‡§è (buttons, icons, images)

Pixel-perfect design

Limitations:

Responsive design ‡§Æ‡•á‡§Ç problem

Screen sizes change ‡§π‡•ã‡§®‡•á ‡§™‡§∞ fix size rigid ‡§¶‡§ø‡§ñ‡§§‡§æ ‡§π‡•à

üîπ 2Ô∏è‚É£ Relative Units (‡§∏‡§æ‡§™‡•á‡§ï‡•ç‡§∑ / Flexible)

Relative units parent element ‡§Ø‡§æ viewport ‡§ï‡•á ‡§π‡§ø‡§∏‡§æ‡§¨ ‡§∏‡•á scale ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç‡•§

a) Percentage (%)

Meaning:

Parent element ‡§ï‡•á dimension ‡§ï‡•á relative‡•§

Example:

div {
  width: 50%; /* parent width ‡§ï‡§æ ‡§Ü‡§ß‡§æ */
  height: 100px;
  background-color: lightblue;
}


Use Cases:

Responsive layouts

Flexible containers

b) em

Meaning:

Relative to font-size of parent element

1em = parent font-size

Example:

div {
  font-size: 16px;
}

p {
  font-size: 2em; /* 16px * 2 = 32px */
}


Use Cases:

Typography scaling

Padding/margin proportional to font-size

c) rem

Meaning:

Relative to root element <html> font-size

1rem = root font-size (default 16px browser)

Example:

html {
  font-size: 16px;
}

p {
  font-size: 1.5rem; /* 16px * 1.5 = 24px */
  padding: 2rem; /* 32px padding */
}


Use Cases:

Consistent typography across the site

Better than em for nested scaling

d) Viewport Width (vw) & Viewport Height (vh)

Meaning:

Relative to viewport size

1vw = 1% of viewport width

1vh = 1% of viewport height

Example:

div {
  width: 50vw; /* viewport width ‡§ï‡§æ 50% */
  height: 30vh; /* viewport height ‡§ï‡§æ 30% */
  background-color: coral;
}


Use Cases:

Fullscreen sections, responsive banners

Hero images, text scaling with screen

e) vmin & vmax

Meaning:

vmin = minimum of viewport width & height

vmax = maximum of viewport width & height

Example:

div {
  width: 50vmin;
  height: 50vmin;
  background-color: lightgreen;
}


Use Cases:

Perfect squares in responsive layouts

f) ch (character) & ex (x-height)
Unit	Meaning	Example
ch	Width of "0" character	width: 20ch;
ex	x-height of font	height: 2ex;

| Unit | Meaning                | Example        |
| ---- | ---------------------- | -------------- |
| ch   | Width of "0" character | `width: 20ch;` |
| ex   | x-height of font       | `height: 2ex;` |


Use Cases:

Input field width based on character count

üîπ 3Ô∏è‚É£ Relative Length Best Practices
Unit	Use Case
px	Fixed elements/icons/images
%	Width/height of containers, responsive layout
em	Typography scaling inside parent container
rem	Global typography consistency
vw/vh	Full-screen sections, hero banners
vmin/vmax	Perfect squares, responsive shapes
ch	Input width, monospaced text
ex	Line height based on font


| Unit      | Use Case                                      |
| --------- | --------------------------------------------- |
| px        | Fixed elements/icons/images                   |
| %         | Width/height of containers, responsive layout |
| em        | Typography scaling inside parent container    |
| rem       | Global typography consistency                 |
| vw/vh     | Full-screen sections, hero banners            |
| vmin/vmax | Perfect squares, responsive shapes            |
| ch        | Input width, monospaced text                  |
| ex        | Line height based on font                     |



üîπ Mini Project Example (Responsive Box)
<div class="box">Hello World</div>

html {
  font-size: 16px; /* 1rem = 16px */
}

.box {
  width: 50%;        /* parent width ‡§ï‡§æ 50% */
  max-width: 30rem;  /* max-width relative to root font */
  height: 20vh;      /* viewport height ‡§ï‡§æ 20% */
  padding: 2em;      /* parent font-size * 2 */
  background-color: coral;
  font-size: 1.2rem; /* 19.2px */
}


Explanation:

Width responsive with %

Max-width ensures box doesn‚Äôt grow too big

Height responsive with viewport

Padding scalable with em

Font-size consistent with rem

‚öñÔ∏è Absolute vs Relative Units
Feature	Absolute (px, cm)	Relative (%, em, rem, vh, vw)
Resize friendly	‚ùå	‚úÖ
Typography scaling	‚ùå	‚úÖ
Fixed layout	‚úÖ	‚ùå
Use for responsive design	‚ùå	‚úÖ

| Feature                   | Absolute (px, cm) | Relative (%, em, rem, vh, vw) |
| ------------------------- | ----------------- | ----------------------------- |
| Resize friendly           | ‚ùå                 | ‚úÖ                             |
| Typography scaling        | ‚ùå                 | ‚úÖ                             |
| Fixed layout              | ‚úÖ                 | ‚ùå                             |
| Use for responsive design | ‚ùå                 | ‚úÖ                             |


‚úÖ Key Takeaways

px ‚Üí Pixel-perfect control, fixed size

% ‚Üí Parent dependent, flexible layout

em ‚Üí Relative to parent font-size, nested scaling

rem ‚Üí Relative to root font-size, consistent scaling

vw/vh ‚Üí Responsive with viewport

vmin/vmax ‚Üí Minimum/maximum of viewport dimensions

ch/ex ‚Üí Text/content based sizing

‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡•ã ‡§§‡•ã ‡§Æ‡•à‡§Ç Interactive Playground ‡§≠‡•Ä ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç:

‡§Ö‡§≤‡§ó-‡§Ö‡§≤‡§ó units ‡§ï‡•ã same box ‡§™‡§∞ test ‡§ï‡§∞ ‡§∏‡§ï‡•ã,

real-time resizing ‡§î‡§∞ responsive output ‡§¶‡•á‡§ñ ‡§∏‡§ï‡•ã,

‡§∏‡§æ‡§• ‡§Æ‡•á‡§Ç hover/focus effects ‡§≠‡•Ä integrate ‡§π‡•ã‡§Ç‡•§