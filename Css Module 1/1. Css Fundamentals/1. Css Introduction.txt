CSS introduction and why, when, where, and how to use it explain in Hindi with examples 


‡§¨‡§ø‡§≤‡•ç‡§ï‡•Å‡§≤! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã CSS (Cascading Style Sheets) ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç Hindi ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§∞‡•Ä ‡§§‡§∞‡§π ‡§∏‡•á ‡§∏‡§Æ‡§ù‡§æ ‡§¶‡•á‡§§‡§æ ‡§π‡•Ç‡§Å ‚Äî ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à, ‡§ï‡•ç‡§Ø‡•ã‡§Ç, ‡§ï‡§¨ , ‡§ï‡§π‡§æ‡§Å , ‡§î‡§∞ ‡§ï‡•à‡§∏‡•á ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡§æ‡§• ‡§Æ‡•á‡§Ç examples ‡§ï‡•á ‡§∏‡§æ‡§•‡•§

1Ô∏è‚É£ CSS ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?

CSS ‡§ï‡§æ ‡§™‡•Ç‡§∞‡§æ ‡§®‡§æ‡§Æ ‡§π‡•à Cascading Style Sheets‡•§

‡§Ø‡§π HTML ‡§ï‡•Ä structure (‡§ú‡•à‡§∏‡•á heading, paragraph, image) ‡§ï‡•ã style ‡§î‡§∞ design ‡§¶‡•á‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è use ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§

‡§Ø‡§æ‡§®‡•Ä, HTML ‡§∏‡§ø‡§∞‡•ç‡§´ content (‡§ú‡•à‡§∏‡•á text ‡§î‡§∞ images) define ‡§ï‡§∞‡§§‡§æ ‡§π‡•à, ‡§î‡§∞ CSS ‡§â‡§∏‡•á ‡§∏‡•Å‡§Ç‡§¶‡§∞ ‡§î‡§∞ attractive ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à‡•§

‡§â‡§¶‡§æ‡§π‡§∞‡§£:

<!DOCTYPE html>
<html>
<head>
  <title>CSS Example</title>
  <style>
    h1 {
      color: blue;      /* Heading ‡§ï‡§æ color ‡§®‡•Ä‡§≤‡§æ ‡§π‡•ã‡§ó‡§æ */
      text-align: center; /* Heading center ‡§Æ‡•á‡§Ç ‡§π‡•ã‡§ó‡•Ä */
    }
    p {
      font-size: 18px;  /* Paragraph ‡§ï‡§æ font size 18px ‡§π‡•ã‡§ó‡§æ */
      color: gray;
    }
  </style>
</head>
<body>
  <h1>Welcome to CSS</h1>
  <p>This is a paragraph styled using CSS.</p>
</body>
</html>


‚úÖ ‡§á‡§∏ example ‡§Æ‡•á‡§Ç ‡§π‡§Æ‡§®‡•á ‡§¶‡•á‡§ñ‡§æ ‡§ï‡§ø HTML content ‡§π‡•à ‡§î‡§∞ CSS ‡§®‡•á color, alignment ‡§î‡§∞ font size add ‡§ï‡§ø‡§Ø‡§æ‡•§

2Ô∏è‚É£ CSS ‡§ï‡•ç‡§Ø‡•ã‡§Ç use ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç? (Why use CSS?)

Design improve ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‚Äì ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü attractive ‡§¶‡§ø‡§ñ‡§§‡•Ä ‡§π‡•à‡•§

Consistency maintain ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‚Äì ‡§™‡•Ç‡§∞‡•á website ‡§Æ‡•á‡§Ç same style ‡§∞‡§ñ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§

Separation of concerns ‚Äì HTML ‡§∏‡§ø‡§∞‡•ç‡§´ content ‡§ï‡•á ‡§≤‡§ø‡§è ‡§î‡§∞ CSS ‡§∏‡§ø‡§∞‡•ç‡§´ design ‡§ï‡•á ‡§≤‡§ø‡§è‡•§

Responsive design ‚Äì Mobile ‡§î‡§∞ Desktop ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§Æ‡•á‡§Ç layout ‡§¨‡§¶‡§≤ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§

Animation ‡§î‡§∞ effects ‚Äì Hover effects, transitions, animations add ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§

3Ô∏è‚É£ CSS ‡§ï‡§¨ use ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç? (When to use CSS?)

‡§ú‡§¨ ‡§Ü‡§™‡§ï‡•ã webpage ‡§ï‡•ã ‡§∏‡•Å‡§Ç‡§¶‡§∞ ‡§î‡§∞ professional ‡§¶‡§ø‡§ñ‡§æ‡§®‡§æ ‡§π‡•ã‡•§

‡§ú‡§¨ ‡§Ü‡§™‡§ï‡•ã text, colors, spacing, layout, animation control ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã‡•§

‡§ú‡§¨ ‡§Ü‡§™ responsive design create ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•ã‡§Ç‡•§

‡§ú‡§¨ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç ‡§ï‡§ø ‡§è‡§ï ‡§π‡•Ä style ‡§ï‡§à pages ‡§™‡§∞ apply ‡§π‡•ã‡•§

4Ô∏è‚É£ CSS ‡§ï‡•à‡§∏‡•á use ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç? (How to use CSS?)

CSS ‡§ï‡•ã HTML ‡§Æ‡•á‡§Ç ‡§§‡•Ä‡§® ‡§§‡§∞‡•Ä‡§ï‡•á ‡§∏‡•á use ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç:

1. Inline CSS

HTML element ‡§ï‡•á style attribute ‡§Æ‡•á‡§Ç directly style ‡§≤‡§ø‡§ñ‡§§‡•á ‡§π‡•à‡§Ç‡•§

<p style="color:red; font-size:20px;">Hello World!</p>


‚ùå Disadvantage: Long term ‡§Æ‡•á‡§Ç maintain ‡§ï‡§∞‡§®‡§æ ‡§Æ‡•Å‡§∂‡•ç‡§ï‡§ø‡§≤ ‡§π‡•à‡•§

2. Internal CSS

HTML document ‡§ï‡•á <head> ‡§Æ‡•á‡§Ç <style> tag ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ ‡§≤‡§ø‡§ñ‡§§‡•á ‡§π‡•à‡§Ç‡•§

<head>
  <style>
    h1 {
      color: green;
    }
  </style>
</head>
<body>
  <h1>Hello World!</h1>
</body>


‚úÖ Advantage: Single page ‡§™‡§∞ easy apply ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§

3. External CSS

Separate .css file ‡§¨‡§®‡§æ‡§ï‡§∞ HTML ‡§Æ‡•á‡§Ç link ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§

style.css:

h1 {
  color: purple;
  text-align: center;
}


index.html:

<head>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <h1>Hello World!</h1>
</body>


‚úÖ Advantage: Multiple pages ‡§™‡§∞ same style apply ‡§π‡•ã ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§î‡§∞ maintain ‡§ï‡§∞‡§®‡§æ ‡§Ü‡§∏‡§æ‡§® ‡§π‡•à‡•§

5Ô∏è‚É£ CSS ‡§ï‡•á Common Properties (Example ‡§ï‡•á ‡§∏‡§æ‡§•)

| Property         | Example                   | Description               |
| ---------------- | ------------------------- | ------------------------- |
| color            | color: red;               | Text ‡§ï‡§æ ‡§∞‡§Ç‡§ó               |
| background-color | background-color: yellow; | Element ‡§ï‡§æ background ‡§∞‡§Ç‡§ó |
| font-size        | font-size: 18px;          | Text ‡§ï‡§æ size              |
| text-align       | text-align: center;       | Text alignment            |
| margin           | margin: 10px;             | Element ‡§ï‡•á ‡§ö‡§æ‡§∞‡•ã‡§Ç ‡§ì‡§∞ space |
| padding          | padding: 5px;             | Element ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ space     |
| border           | border: 2px solid black;  | Element ‡§ï‡•Ä boundary       |



6Ô∏è‚É£ Example ‚Äì Complete Mini Page
<!DOCTYPE html>
<html>
<head>
  <title>CSS Demo</title>
  <style>
    body {
      background-color: #f0f0f0;
      font-family: Arial, sans-serif;
    }
    h1 {
      color: #333;
      text-align: center;
    }
    p {
      color: #555;
      font-size: 16px;
      margin: 20px;
    }
    button {
      background-color: blue;
      color: white;
      padding: 10px 20px;
      border: none;
      cursor: pointer;
    }
    button:hover {
      background-color: darkblue;
    }
  </style>
</head>
<body>
  <h1>Welcome to My Website</h1>
  <p>This is a simple webpage styled using CSS.</p>
  <button>Click Me!</button>
</body>
</html>


‚úÖ ‡§á‡§∏‡§Æ‡•á‡§Ç ‡§π‡§Æ‡§®‡•á ‡§¶‡•á‡§ñ‡§æ:

Body ‡§ï‡§æ background

Heading ‡§î‡§∞ paragraph ‡§ï‡§æ color ‡§î‡§∞ font size

Button hover effect

‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡•ã ‡§§‡•ã ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã CSS ‡§ï‡•Ä ‡§™‡•Ç‡§∞‡•Ä roadmap ‡§î‡§∞ important topics (selectors, flexbox, grid, animation, media queries) ‡§≠‡•Ä Hindi ‡§Æ‡•á‡§Ç examples ‡§ï‡•á ‡§∏‡§æ‡§• step by step ‡§¨‡§§‡§æ ‡§¶‡•Ç‡§Å‡•§

‡§ï‡•ç‡§Ø‡§æ ‡§Æ‡•à‡§Ç ‡§µ‡•ã ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å?


‡§†‡•Ä‡§ï ‡§π‡•à! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã CSS ‡§ï‡•Ä ‡§™‡•Ç‡§∞‡•Ä roadmap step by step Hindi ‡§Æ‡•á‡§Ç examples ‡§ï‡•á ‡§∏‡§æ‡§• ‡§¨‡§§‡§æ ‡§¶‡•á‡§§‡§æ ‡§π‡•Ç‡§Å‡•§ ‡§á‡§∏‡•á ‡§™‡§¢‡§º‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§Ü‡§™ CSS ‡§Æ‡•á‡§Ç basic ‡§∏‡•á advanced ‡§§‡§ï confident ‡§π‡•ã ‡§ú‡§æ‡§è‡§Ç‡§ó‡•á‡•§

CSS Roadmap in Hindi

1Ô∏è‚É£ Basics of CSS

1.1 CSS ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?

CSS = Cascading Style Sheets

HTML ‡§ï‡•ã style ‡§î‡§∞ layout ‡§¶‡•á‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è use ‡§π‡•ã‡§§‡§æ ‡§π‡•à

Types: Inline, Internal, External

Example:

<p style="color:red;">Hello</p> <!-- Inline CSS -->

1.2 CSS Syntax
selector {
  property: value;
}


Selector: ‡§ï‡§ø‡§∏ element ‡§ï‡•ã style ‡§¶‡•á‡§®‡§æ ‡§π‡•à (e.g., p, .class, #id)

Property: style attribute (e.g., color, font-size)

Value: attribute ‡§ï‡•Ä value (e.g., red, 16px)

Example:

h1 {
  color: blue;
  text-align: center;
}

1.3 CSS Selectors

Element Selector: p { ... }

Class Selector: .box { ... }

ID Selector: #main { ... }

Universal Selector: * { margin: 0; padding: 0; }

Group Selector: h1, h2, h3 { color: green; }

2Ô∏è‚É£ CSS Colors and Fonts
2.1 Colors
color: red;             /* text color */
background-color: #f0f0f0; /* background color */


Color types: Name (red), Hex (#ff0000), RGB (rgb(255,0,0)), HSL

2.2 Fonts
font-family: Arial, sans-serif;
font-size: 18px;
font-weight: bold;  /* normal, bold */

3Ô∏è‚É£ Box Model

‡§π‡§∞ element ‡§Æ‡•á‡§Ç 4 ‡§ö‡•Ä‡§ú‡§º‡•á‡§Ç ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç:

Content ‚Üí Text ‡§Ø‡§æ image

Padding ‚Üí Content ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ space

Border ‚Üí Element ‡§ï‡•Ä boundary

Margin ‚Üí Element ‡§ï‡•á ‡§¨‡§æ‡§π‡§∞ space

Example:

div {
  width: 200px;
  padding: 10px;
  border: 2px solid black;
  margin: 20px;
}

4Ô∏è‚É£ Display & Positioning
4.1 Display

block ‚Üí New line ‡§≤‡•á‡§§‡§æ ‡§π‡•à (div, h1)

inline ‚Üí Same line (span, a)

inline-block ‚Üí Inline + block properties

none ‚Üí Hide element

4.2 Position

static ‚Üí default

relative ‚Üí relative to itself

absolute ‚Üí relative to nearest positioned parent

fixed ‚Üí relative to viewport

sticky ‚Üí scroll ‡§§‡§ï fixed

Example:

div {
  position: absolute;
  top: 50px;
  left: 50px;
}

5Ô∏è‚É£ Flexbox (Modern Layout)
5.1 Flex Properties
.container {
  display: flex;
  justify-content: center; /* horizontal alignment */
  align-items: center;    /* vertical alignment */
  gap: 20px;              /* space between items */
}

5.2 Flex Items
.item {
  flex: 1;  /* grow to fill space */
}


Example:

<div class="container">
  <div class="item">Box 1</div>
  <div class="item">Box 2</div>
</div>

6Ô∏è‚É£ Grid (2D Layout)
.container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 10px;
}


1fr = fraction of available space

Grid 2D layout (row + column) ‡§ï‡•á ‡§≤‡§ø‡§è best ‡§π‡•à

7Ô∏è‚É£ Pseudo-classes & Pseudo-elements
7.1 Pseudo-classes
a:hover { color: red; }     /* hover effect */
input:focus { border: 2px solid blue; }

7.2 Pseudo-elements
p::first-letter { font-size: 24px; }
p::after { content: " ‚ú®"; }

8Ô∏è‚É£ Transitions & Animations
8.1 Transition
button {
  background-color: blue;
  transition: background-color 0.3s;
}
button:hover {
  background-color: darkblue;
}

8.2 Keyframe Animation
@keyframes move {
  0% { transform: translateX(0); }
  100% { transform: translateX(100px); }
}
.box {
  animation: move 2s infinite alternate;
}

9Ô∏è‚É£ Media Queries (Responsive Design)
@media (max-width: 768px) {
  body {
    background-color: lightgray;
  }
}


Mobile, tablet, desktop ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§≤‡§ó layout apply ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç

10Ô∏è‚É£ Important Tips

Always use External CSS for multiple pages

Use classes instead of IDs for styling multiple elements

Learn Flexbox + Grid ‚Üí Modern layout

Use variables in CSS for colors/fonts (--main-color: red;)

Test responsiveness with media queries

üí° ‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡•ã ‡§§‡•ã ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã ‡§á‡§∏‡§ï‡•á ‡§ä‡§™‡§∞ ‚ÄúComplete Mini Projects with CSS‚Äù ‡§≠‡•Ä ‡§¨‡§®‡§æ ‡§ï‡§∞ ‡§¶‡•Ç‡§Å, ‡§ú‡§ø‡§®‡§∏‡•á ‡§Ü‡§™ practically ‡§∏‡§¨ ‡§ö‡•Ä‡§ú‡§º ‡§∏‡•Ä‡§ñ ‡§ú‡§æ‡§ì‡§ó‡•á, ‡§ú‡•à‡§∏‡•á:

Login Page

Portfolio Website

Product Card Layout

Responsive Navbar


‡§†‡•Ä‡§ï ‡§π‡•à! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã CSS Mini Projects with Examples step by step ‡§¨‡§§‡§æ ‡§∞‡§π‡§æ ‡§π‡•Ç‡§Å‡•§ ‡§Ø‡•á projects basic ‚Üí advanced ‡§§‡§ï ‡§π‡•à‡§Ç ‡§î‡§∞ ‡§π‡§∞ project ‡§Æ‡•á‡§Ç HTML + CSS + responsive design cover ‡§π‡•ã‡§ó‡§æ‡•§

CSS Mini Projects Roadmap (Hindi)
1Ô∏è‚É£ Project 1: Simple Login Page

Goal: Basic form design + responsive layout

HTML:

<!DOCTYPE html>
<html>
<head>
  <title>Login Page</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <div class="login-container">
    <h2>Login</h2>
    <form>
      <input type="text" placeholder="Username" required>
      <input type="password" placeholder="Password" required>
      <button type="submit">Login</button>
    </form>
  </div>
</body>
</html>


CSS (style.css):

body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background: #f0f0f0;
  font-family: Arial, sans-serif;
}

.login-container {
  background: white;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0,0,0,0.2);
  width: 300px;
  text-align: center;
}

input {
  width: 90%;
  padding: 10px;
  margin: 10px 0;
  border-radius: 5px;
  border: 1px solid #ccc;
}

button {
  padding: 10px 20px;
  border: none;
  background-color: blue;
  color: white;
  cursor: pointer;
  border-radius: 5px;
  transition: background 0.3s;
}

button:hover {
  background-color: darkblue;
}


Responsive:

@media (max-width: 400px) {
  .login-container {
    width: 90%;
  }
}


‚úÖ ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Æ‡§ø‡§≤‡§æ: Form styling, flex centering, hover effect, media queries

2Ô∏è‚É£ Project 2: Portfolio Card Layout

Goal: Modern card layout with hover effects

HTML:

<div class="card-container">
  <div class="card">
    <img src="https://via.placeholder.com/200" alt="Project">
    <h3>Project 1</h3>
    <p>Short description of project.</p>
  </div>
  <div class="card">
    <img src="https://via.placeholder.com/200" alt="Project">
    <h3>Project 2</h3>
    <p>Short description of project.</p>
  </div>
</div>


CSS:

.card-container {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  justify-content: center;
  padding: 20px;
}

.card {
  background: white;
  width: 250px;
  border-radius: 10px;
  overflow: hidden;
  box-shadow: 0 0 10px rgba(0,0,0,0.2);
  text-align: center;
  transition: transform 0.3s;
}

.card img {
  width: 100%;
}

.card:hover {
  transform: translateY(-10px);
}


‚úÖ ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Æ‡§ø‡§≤‡§æ: Flexbox, Card design, hover animation

3Ô∏è‚É£ Project 3: Responsive Navigation Bar

Goal: Navbar with dropdown and mobile menu

HTML:

<nav>
  <div class="logo">MySite</div>
  <ul class="nav-links">
    <li><a href="#">Home</a></li>
    <li><a href="#">About</a></li>
    <li><a href="#">Services</a></li>
    <li><a href="#">Contact</a></li>
  </ul>
  <div class="burger">&#9776;</div>
</nav>


CSS:

nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  background: #333;
  color: white;
}

.nav-links {
  display: flex;
  gap: 20px;
  list-style: none;
}

.nav-links li a {
  color: white;
  text-decoration: none;
}

.burger {
  display: none;
  font-size: 24px;
  cursor: pointer;
}

/* Responsive */
@media (max-width: 768px) {
  .nav-links {
    display: none;
    flex-direction: column;
    width: 100%;
    background: #444;
  }
  .nav-links.active {
    display: flex;
  }
  .burger {
    display: block;
  }
}


JS for mobile toggle (optional):

<script>
const burger = document.querySelector('.burger');
const nav = document.querySelector('.nav-links');

burger.addEventListener('click', () => {
  nav.classList.toggle('active');
});
</script>


‚úÖ ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Æ‡§ø‡§≤‡§æ: Navbar design, Flexbox, Media queries, simple JS toggle

4Ô∏è‚É£ Project 4: Animated Button

Goal: Hover effect + gradient animation

HTML:

<button class="animated-btn">Hover Me</button>


CSS:

.animated-btn {
  padding: 15px 30px;
  border: none;
  border-radius: 5px;
  background: linear-gradient(45deg, #ff6b6b, #f7d794);
  color: white;
  font-size: 16px;
  cursor: pointer;
  transition: background 0.5s, transform 0.3s;
}

.animated-btn:hover {
  background: linear-gradient(45deg, #f7d794, #ff6b6b);
  transform: scale(1.1);
}


‚úÖ ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Æ‡§ø‡§≤‡§æ: Transitions, gradients, hover animation

5Ô∏è‚É£ Project 5: Product Card with Flip Animation

Goal: Interactive card for products

HTML:

<div class="flip-card">
  <div class="flip-card-inner">
    <div class="flip-card-front">
      <h2>Product</h2>
    </div>
    <div class="flip-card-back">
      <p>More details here.</p>
    </div>
  </div>
</div>


CSS:

.flip-card {
  background-color: transparent;
  width: 200px;
  height: 200px;
  perspective: 1000px;
}

.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.flip-card:hover .flip-card-inner {
  transform: rotateY(180deg);
}

.flip-card-front, .flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid #ccc;
  border-radius: 10px;
}

.flip-card-back {
  background-color: #2980b9;
  color: white;
  transform: rotateY(180deg);
}


‚úÖ ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Æ‡§ø‡§≤‡§æ: 3D flip, transform, transition, hover effect

üí° Next Step:
‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡•ã ‡§§‡•ã ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã ‚ÄúCSS 20+ Mini Projects Complete List‚Äù ‡§¶‡•á ‡§¶‡•Ç‡§Å, ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç ‡§π‡§∞ ‡§§‡§∞‡§π ‡§ï‡•á projects ‡§π‡•ã‡§Ç‡§ó‡•á:

Buttons, Cards, Navbar, Forms

Animations, Hover Effects, Transitions

Grid & Flexbox Layouts

Full responsive websites

‡§á‡§∏‡§∏‡•á ‡§Ü‡§™ CSS expert level ‡§§‡§ï ‡§™‡§π‡•Å‡§Å‡§ö ‡§∏‡§ï‡§§‡•á ‡§π‡•ã‡•§

‡§ï‡•ç‡§Ø‡§æ ‡§Æ‡•à‡§Ç ‡§µ‡•ã list ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å?


‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã CSS 20+ Mini Projects Complete List ‡§¶‡•á ‡§∞‡§π‡§æ ‡§π‡•Ç‡§Å, step by step, basic ‚Üí advanced‡•§ ‡§π‡§∞ project ‡§ï‡•ã ‡§Ü‡§™ practice ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç, ‡§î‡§∞ ‡§π‡§∞ project ‡§Æ‡•á‡§Ç HTML + CSS + Responsive design ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Æ‡§ø‡§≤‡•á‡§ó‡§æ‡•§

CSS 20+ Mini Projects List (Hindi)
1Ô∏è‚É£ Basic Projects

Simple Login Page ‚Äì Form design + center layout + responsive

Registration Form ‚Äì Input fields, validation style, hover effects

Simple Portfolio Card ‚Äì Card layout, hover animation

About Me Section ‚Äì Image + text alignment with flex/grid

Pricing Table ‚Äì Columns with hover effect and shadow


2Ô∏è‚É£ Buttons & Effects

Animated Button ‚Äì Gradient + hover scale effect

Ripple Button Effect ‚Äì Click animation using CSS

Ghost Button ‚Äì Border only, hover color fill

3D Button ‚Äì Box shadow + transform on hover

Toggle Switch Button ‚Äì On/off slider

3Ô∏è‚É£ Navigation & Menus

Responsive Navbar ‚Äì Flex + burger menu + media query

Dropdown Menu ‚Äì Hover dropdown with CSS transitions

Sticky Navbar ‚Äì Navbar fixed on top while scrolling

Sidebar Menu ‚Äì Collapsible vertical menu

4Ô∏è‚É£ Cards & Layouts

Product Card with Flip Animation ‚Äì 3D hover effect

Grid Portfolio Layout ‚Äì Responsive image grid

Team Member Card ‚Äì Image + social icons hover effect

Testimonial Card ‚Äì Carousel/slider design using flex

5Ô∏è‚É£ Animations & Effects

Loading Spinner Animation ‚Äì Simple spinning loader

Animated Progress Bar ‚Äì Fill effect on load

Text Animation ‚Äì Typing effect or gradient animation

Hover Image Effect ‚Äì Zoom, grayscale to color transition

Background Gradient Animation ‚Äì Animated linear gradient

6Ô∏è‚É£ Complete Web Sections

Hero Section with CTA ‚Äì Full width, background image/video, button

Footer Design ‚Äì Multiple columns, social icons, responsive

Responsive Blog Layout ‚Äì Card grid, title, excerpt, read more

E-commerce Product Page ‚Äì Image gallery, description, buttons

Contact Us Page ‚Äì Form + map section + submit button

FAQ Accordion ‚Äì Collapsible question/answer section

Pricing & Feature Section ‚Äì Multi-column layout + hover highlight

Extra Challenges (Advanced CSS)

CSS Glassmorphism Card ‚Äì Frosted glass effect

CSS Neumorphism Buttons ‚Äì Soft shadow effect

CSS Clip-path Shapes ‚Äì Creative shapes for sections/images

Animated Scroll Indicator ‚Äì Progress bar on scroll

Full Landing Page ‚Äì Header, Hero, Features, Footer responsive

üí° Tips to Follow:

‡§π‡§∞ project ‡§Æ‡•á‡§Ç Flexbox + Grid ‡§ï‡§æ ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤ ‡§ï‡§∞‡•á‡§Ç‡•§

Responsive design ‡§ï‡•á ‡§≤‡§ø‡§è media queries ‡§ú‡§∞‡•Ç‡§∞ ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤ ‡§ï‡§∞‡•á‡§Ç‡•§

Hover effects ‡§î‡§∞ animations ‡§Æ‡•á‡§Ç transition ‡§î‡§∞ transform ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§

Images ‡§ï‡•á ‡§≤‡§ø‡§è placeholder images (https://via.placeholder.com) use ‡§ï‡§∞‡•á‡§Ç‡•§

Buttons, cards, and forms ‡§Æ‡•á‡§Ç consistent colors and fonts ‡§∞‡§ñ‡•á‡§Ç‡•§

‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡•ã ‡§§‡•ã ‡§Æ‡•à‡§Ç ‡§á‡§∏ 20+ mini projects ‡§ï‡•ã complete step by step HTML + CSS code ‡§ï‡•á ‡§∏‡§æ‡§• ‡§¨‡§®‡§æ ‡§ï‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§¶‡•Ç‡§Å, ‡§§‡§æ‡§ï‡§ø ‡§Ü‡§™ practically ‡§∏‡§¨ ‡§ö‡•Ä‡§ú‡§º ‡§∏‡•Ä‡§ñ ‡§ú‡§æ‡§è‡§Å‡•§

‡§ï‡•ç‡§Ø‡§æ ‡§Æ‡•à‡§Ç ‡§µ‡•ã detailed step by step code ‡§¨‡§®‡§æ‡§ï‡§∞ ‡§¶‡•á ‡§¶‡•Ç‡§Å?