css selectors explain in hindi with examples and details and when why and where  how to use it in projects and which part to i am using it 
ChatGPT said:

‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã CSS Selectors ‡§ï‡•ã Hindi ‡§Æ‡•á‡§Ç step-by-step ‡§∏‡§Æ‡§ù‡§æ‡§§‡§æ ‡§π‡•Ç‡§Å, examples ‡§ï‡•á ‡§∏‡§æ‡§•, ‡§î‡§∞ ‡§¨‡§§‡§æ‡§ä‡§Å‡§ó‡§æ ‡§ï‡§ø ‡§ï‡§π‡§æ‡§Å, ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§î‡§∞ ‡§ï‡§¨ ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤ ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è, ‡§î‡§∞ project ‡§Æ‡•á‡§Ç ‡§π‡§∞ selector ‡§ï‡§ø‡§∏ part ‡§ï‡•á ‡§≤‡§ø‡§è useful ‡§π‡•à‡•§

1Ô∏è‚É£ CSS Selector ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?

CSS selector HTML elements ‡§ï‡•ã target ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è use ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§§‡§æ‡§ï‡§ø ‡§Ü‡§™ ‡§â‡§®‡§ï‡•á style ‡§ï‡•ã change ‡§ï‡§∞ ‡§∏‡§ï‡•ã‡•§

Syntax:

selector {
  property: value;
}


Example:

p {
  color: red;
}


‡§Ø‡§π ‡§∏‡§≠‡•Ä <p> elements ‡§ï‡•ã ‡§≤‡§æ‡§≤ ‡§∞‡§Ç‡§ó ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡§æ‡§è‡§ó‡§æ‡•§

2Ô∏è‚É£ Types of CSS Selectors
(A) Basic / Simple Selectors

Element Selector (Tag Selector)

‡§ï‡§ø‡§∏‡•Ä specific HTML tag ‡§ï‡•ã select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

h1 {
  color: blue;
}


Use in Projects: Titles, paragraphs, headings design ‡§ï‡•á ‡§≤‡§ø‡§è‡•§

Class Selector (.)

‡§ï‡§ø‡§∏‡•Ä element ‡§ï‡•á class attribute ‡§ï‡•ã select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

.btn {
  background: green;
  color: white;
  padding: 10px;
}


Use: Buttons, cards, containers ‡§ú‡•à‡§∏‡•Ä repeated styling ‡§Æ‡•á‡§Ç‡•§

ID Selector (#)

‡§ï‡§ø‡§∏‡•Ä element ‡§ï‡•á unique ID ‡§ï‡•ã select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

#header {
  background: black;
  color: white;
  padding: 20px;
}


Use: Unique sections, headers, footer, navbar‡•§

Universal Selector (*)

‡§∏‡§≠‡•Ä elements ‡§ï‡•ã select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}


Use: Project start ‡§Æ‡•á‡§Ç reset default margin/padding‡•§

(B) Grouping & Multiple Selectors

Grouping Selector (,)

Multiple elements ‡§™‡§∞ same style apply ‡§ï‡§∞‡§®‡§æ‡•§

h1, h2, h3 {
  font-family: Arial, sans-serif;
  color: #333;
}


Use: Headings ‡§ï‡•á ‡§≤‡§ø‡§è same style define ‡§ï‡§∞‡§®‡§æ‡•§

(C) Combinator Selectors

Descendant Selector (space)

Parent ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ nested element ‡§ï‡•ã target ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

.container p {
  color: gray;
}


Use: Specific section ‡§ï‡•á paragraphs ‡§ï‡•ã style ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§

Child Selector (>)

‡§ï‡•á‡§µ‡§≤ direct child elements ‡§ï‡•ã select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

.menu > li {
  display: inline-block;
  margin-right: 10px;
}


Use: Navbar menu items styling‡•§

Adjacent Sibling Selector (+)

Immediately next sibling element ‡§ï‡•ã target ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

h1 + p {
  font-size: 18px;
}


Use: ‡§ï‡§ø‡§∏‡•Ä heading ‡§ï‡•á ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§¨‡§æ‡§¶ paragraph ‡§ï‡•ã style ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§

General Sibling Selector (~)

Same parent ‡§ï‡•á ‡§∏‡§≠‡•Ä siblings ‡§ï‡•ã select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

h1 ~ p {
  color: gray;
}


Use: Multiple siblings styling ‡§è‡§ï ‡§∏‡§æ‡§•‡•§

(D) Attribute Selectors

[attribute]

‡§ï‡§ø‡§∏‡•Ä element ‡§ï‡•á ‡§ï‡§ø‡§∏‡•Ä attribute ‡§ï‡•á basis ‡§™‡§∞ select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

input[type="text"] {
  border: 1px solid #ccc;
}


Use: Forms, input fields, button types styling‡•§

[attribute=value]

Specific value ‡§µ‡§æ‡§≤‡•á element‡•§

a[target="_blank"] {
  color: red;
}


[attribute^=value]

Attribute value start with

a[href^="https"] {
  font-weight: bold;
}


[attribute$=value]

Attribute value end with

a[href$=".pdf"] {
  color: blue;
}


[attribute*=value]

Attribute value contain

a[href*="google"] {
  text-decoration: underline;
}


Use: Forms, links, dynamic content styling‡•§

(E) Pseudo-classes

:hover

Element hover ‡§π‡•ã‡§®‡•á ‡§™‡§∞ style‡•§

button:hover {
  background: darkgreen;
}


Use: Buttons, links interaction‡•§

:first-child / :last-child / :nth-child(n)

Specific child select‡•§

ul li:first-child { font-weight: bold; }
ul li:nth-child(2) { color: red; }


Use: Lists, table rows, cards styling‡•§

:not(selector)

‡§ï‡§ø‡§∏‡•Ä element ‡§ï‡•ã exclude ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

p:not(.intro) { color: gray; }

(F) Pseudo-elements

::before / ::after

Element ‡§ï‡•á content ‡§ï‡•á ‡§™‡§π‡§≤‡•á ‡§Ø‡§æ ‡§¨‡§æ‡§¶ insert ‡§ï‡§∞‡§®‡§æ‡•§

.btn::after {
  content: "‚Üí";
  margin-left: 5px;
}


Use: Buttons, quotes, decorative elements‡•§

(G) Combinations & Specificity

.container > ul li:first-child a:hover

Highly specific targeting

Use in Projects: Navbar, dropdown menus, interactive cards

3Ô∏è‚É£ CSS Selectors ‡§ï‡§æ Project ‡§Æ‡•á‡§Ç Use
Selector	Project Part	Example
Element	Headings, paragraphs	h1, p
Class	Cards, buttons, repeated components	.btn, .card
ID	Unique sections, header/footer	#header
Universal *	Reset all elements	* {margin:0}
Descendant space	Section ke andar elements	.container p
Child >	Navbar items, menu	.menu > li
Attribute [type="text"]	Forms, inputs	input[type="text"]
Pseudo-class :hover	Buttons, links	button:hover
Pseudo-element ::before	Decorations	.btn::after
Nth-child	Lists, table rows	ul li:nth-child(2)
4Ô∏è‚É£ ‡§ï‡§¨, ‡§ï‡•ç‡§Ø‡•ã‡§Ç, ‡§î‡§∞ ‡§ï‡§π‡§æ‡§Å Use ‡§ï‡§∞‡•á‡§Ç

Element Selector ‚Üí Simple default styling ‚Üí headings, paragraphs

Class Selector ‚Üí Reusable components ‚Üí cards, buttons, sections

ID Selector ‚Üí Unique sections ‚Üí header, footer, hero

Descendant / Child ‚Üí Specific section targeting ‚Üí nested divs, menus

Attribute Selector ‚Üí Forms, links ‚Üí input styling, dynamic links

Pseudo-class ‚Üí Interaction ‚Üí hover effects, focus, active

Pseudo-element ‚Üí Decoration ‚Üí icons, quotes, badges

üí° Tips for Projects:

Reusable components ‚Üí use class selectors

Unique sections ‚Üí use ID selectors

Interaction / hover ‚Üí use pseudo-classes

Dynamic content ‚Üí use attribute selectors

Precise targeting ‚Üí combine selectors carefully

‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡•ã ‡§§‡•ã ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã CSS Selectors ‡§ï‡§æ Full Visual Cheatsheet ‡§≠‡•Ä ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç ‡§∏‡§≠‡•Ä selectors + examples + project use cases ‡§è‡§ï image ‡§Ø‡§æ HTML table ‡§Æ‡•á‡§Ç ‡§π‡•ã, ‡§§‡§æ‡§ï‡§ø ‡§Ü‡§™ instant reference ‡§ï‡•á ‡§≤‡§ø‡§è use ‡§ï‡§∞ ‡§∏‡§ï‡•ã‡•§

‡§ï‡•ç‡§Ø‡§æ ‡§Æ‡•à‡§Ç ‡§µ‡•ã ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å?

You said:
please explain in details with examples 
ChatGPT said:

‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã CSS Selectors full details + examples ‡§ï‡•á ‡§∏‡§æ‡§• step by step explain ‡§ï‡§∞‡§§‡§æ ‡§π‡•Ç‡§Å‡•§ ‡§Æ‡•à‡§Ç ‡§á‡§∏‡•á types, syntax, examples ‡§î‡§∞ real project use ‡§ï‡•á ‡§π‡§ø‡§∏‡§æ‡§¨ ‡§∏‡•á organize ‡§ï‡§∞‡•Ç‡§Å‡§ó‡§æ‡•§

1Ô∏è‚É£ CSS Selector ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?

CSS selector HTML element ‡§ï‡•ã select ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡•à ‡§§‡§æ‡§ï‡§ø ‡§Ü‡§™ ‡§â‡§∏ element ‡§ï‡•Ä style ‡§¨‡§¶‡§≤ ‡§∏‡§ï‡•á‡§Ç‡•§

Syntax:

selector {
  property: value;
}


Example:

p {
  color: red;
}


‡§Ø‡§π ‡§∏‡§≠‡•Ä <p> elements ‡§ï‡•ã ‡§≤‡§æ‡§≤ ‡§∞‡§Ç‡§ó ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡§æ‡§è‡§ó‡§æ‡•§

Use in projects: ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä webpage ‡§ï‡•á text, div, button ‡§Ü‡§¶‡§ø ‡§ï‡•ã style ‡§¶‡•á‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§

2Ô∏è‚É£ Basic / Simple Selectors
(A) Element Selector (Tag Selector)

‡§ï‡§ø‡§∏‡•Ä HTML tag ‡§ï‡•ã select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

h1 {
  color: blue;
  font-size: 32px;
}


‡§∏‡§≠‡•Ä <h1> headings ‡§®‡•Ä‡§≤‡•á ‡§∞‡§Ç‡§ó ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡§æ‡§à ‡§¶‡•á‡§Ç‡§ó‡•Ä‡•§

Project Use:

Headings, paragraphs, lists ‡§ï‡•á ‡§≤‡§ø‡§è default styling‡•§

(B) Class Selector (.)

‡§ï‡§ø‡§∏‡•Ä element ‡§ï‡•á class attribute ‡§ï‡•ã select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

.btn {
  background: green;
  color: white;
  padding: 10px 20px;
  border-radius: 5px;
}


‡§∏‡§≠‡•Ä <div class="btn"> ‡§Ø‡§æ <button class="btn"> styled ‡§π‡•ã‡§Ç‡§ó‡•á‡•§

Project Use:

Buttons, cards, repeated components, reusable styles‡•§

(C) ID Selector (#)

‡§ï‡§ø‡§∏‡•Ä element ‡§ï‡•á unique ID ‡§ï‡•ã select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

#header {
  background: black;
  color: white;
  padding: 20px;
}


‡§∏‡§ø‡§∞‡•ç‡§´‡§º <div id="header"> styled ‡§π‡•ã‡§ó‡§æ‡•§

Project Use:

Unique sections ‡§ú‡•à‡§∏‡•á header, footer, hero section‡•§

(D) Universal Selector (*)

‡§∏‡§≠‡•Ä elements select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}


Project Use:

Reset default margin/padding at project start‡•§

3Ô∏è‚É£ Grouping & Multiple Selectors
(A) Grouping Selector

Multiple elements ‡§™‡§∞ ‡§è‡§ï ‡§∏‡§æ‡§• style apply ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§

h1, h2, h3 {
  font-family: Arial, sans-serif;
  color: #333;
}


Project Use:

Headings ‡§ï‡•á ‡§≤‡§ø‡§è common styling‡•§

4Ô∏è‚É£ Combinator Selectors
(A) Descendant Selector (space)

Parent ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ nested elements ‡§ï‡•ã select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

.container p {
  color: gray;
}


Project Use:

‡§ï‡§ø‡§∏‡•Ä section ‡§ï‡•á paragraphs ‡§ï‡•ã style ‡§ï‡§∞‡§®‡§æ‡•§

(B) Child Selector (>)

‡§ï‡•á‡§µ‡§≤ direct child select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

.menu > li {
  display: inline-block;
  margin-right: 10px;
}


Project Use:

Navbar menu items, dropdowns‡•§

(C) Adjacent Sibling Selector (+)

‡§§‡•Å‡§∞‡§Ç‡§§ next sibling element ‡§ï‡•ã target ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

h1 + p {
  font-size: 18px;
}


Project Use:

Heading ‡§ï‡•á ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§¨‡§æ‡§¶ paragraph styling‡•§

(D) General Sibling Selector (~)

‡§∏‡§≠‡•Ä siblings select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

h1 ~ p {
  color: gray;
}


Project Use:

Multiple siblings styling ‡§è‡§ï ‡§∏‡§æ‡§•‡•§

5Ô∏è‚É£ Attribute Selectors

‡§ï‡§ø‡§∏‡•Ä element ‡§ï‡•á attribute ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ select ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

/* 1. Specific attribute */
input[type="text"] {
  border: 1px solid #ccc;
  padding: 5px;
}

/* 2. Attribute starts with */
a[href^="https"] {
  font-weight: bold;
}

/* 3. Attribute ends with */
a[href$=".pdf"] {
  color: blue;
}

/* 4. Attribute contains */
a[href*="google"] {
  text-decoration: underline;
}


Project Use:

Forms styling, links, buttons, dynamic content‡•§

6Ô∏è‚É£ Pseudo-classes

Special states of elements select ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§

/* Hover state */
button:hover {
  background: darkgreen;
  color: white;
}

/* First child */
ul li:first-child {
  font-weight: bold;
}

/* Last child */
ul li:last-child {
  color: red;
}

/* Nth child */
ul li:nth-child(2) {
  color: blue;
}

/* Not selector */
p:not(.intro) {
  color: gray;
}


Project Use:

Buttons, links interaction, lists, tables‡•§

7Ô∏è‚É£ Pseudo-elements

Element ‡§ï‡•á content ‡§ï‡•á ‡§™‡§π‡§≤‡•á ‡§Ø‡§æ ‡§¨‡§æ‡§¶ content insert ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§

.btn::before {
  content: "üî• ";
}

.btn::after {
  content: " ‚Üí";
  margin-left: 5px;
}


Project Use:

Buttons, quotes, icons, decorations‡•§

8Ô∏è‚É£ Combinations & Specificity
.container > ul li:first-child a:hover {
  color: red;
  font-weight: bold;
}


Project Use:

High precision targeting: Navbar, dropdown menus, interactive cards‡•§

9Ô∏è‚É£ CSS Selectors ‡§ï‡§æ Project ‡§Æ‡•á‡§Ç Use Table
Selector	Project Part	Example
Element	Headings, paragraphs	h1, p
Class	Cards, buttons	.btn, .card
ID	Unique sections	#header
Universal	Reset all elements	* {margin:0}
Descendant	Section elements	.container p
Child	Navbar items	.menu > li
Attribute	Forms, links	input[type="text"]
Pseudo-class	Interaction	button:hover
Pseudo-element	Decoration	.btn::after
Nth-child	Lists, table rows	ul li:nth-child(2)
10Ô∏è‚É£ ‡§ï‡§¨, ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§î‡§∞ ‡§ï‡§π‡§æ‡§Å Use ‡§ï‡§∞‡•á‡§Ç

Element Selector ‚Üí Simple default styling ‚Üí headings, paragraphs

Class Selector ‚Üí Reusable components ‚Üí buttons, cards, sections

ID Selector ‚Üí Unique sections ‚Üí header, footer, hero

Descendant / Child ‚Üí Nested targeting ‚Üí nested divs, menus

Attribute Selector ‚Üí Forms, links ‚Üí input styling, dynamic links

Pseudo-class ‚Üí Interaction ‚Üí hover, focus, active

Pseudo-element ‚Üí Decoration ‚Üí icons, quotes, badges

‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡•ã ‡§§‡•ã ‡§Æ‡•à‡§Ç ‡§á‡§∏‡•á ‡§è‡§ï full Visual Cheatsheet + Examples HTML file ‡§≠‡•Ä ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç ‡§∏‡§≠‡•Ä selectors + code + live preview ‡§π‡•ã, ‡§§‡§æ‡§ï‡§ø ‡§Ü‡§™ directly browser ‡§Æ‡•á‡§Ç try ‡§ï‡§∞ ‡§∏‡§ï‡•ã‡•§

‡§ï‡•ç‡§Ø‡§æ ‡§Æ‡•à‡§Ç ‡§µ‡•ã ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å?

You said:
mujhe selectors ke practical task de dho jaise project mai bahut sare fileds aa gye aur mujhe unko manage krna hai div > ul li etc. type ke task aur ismai se last child middle child ke upper properties add krni ho mean iss type ke task dho taki mai easily learn kr saku
ChatGPT said:

‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã CSS selectors ‡§ï‡•á practical project-style tasks ‡§¶‡•á‡§§‡§æ ‡§π‡•Ç‡§Å, ‡§ú‡§ø‡§®‡§Æ‡•á‡§Ç ‡§Ü‡§™ real-life scenarios practice ‡§ï‡§∞ ‡§∏‡§ï‡•ã‡•§ ‡§Ø‡•á tasks nested elements, child, last-child, nth-child, pseudo-classes ‡§Ü‡§¶‡§ø ‡§™‡§∞ focus ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á‡•§

1Ô∏è‚É£ Task: Navbar Menu Styling

Scenario:

‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ navigation bar ‡§π‡•à‡•§

‡§∏‡§≠‡•Ä menu items horizontal ‡§π‡•à‡§Ç‡•§

Last item ‡§ï‡§æ ‡§∞‡§Ç‡§ó ‡§Ö‡§≤‡§ó ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è‡•§

Hover effect ‡§≠‡•Ä ‡§¶‡•á‡§®‡§æ ‡§π‡•à‡•§

HTML Example:

<nav class="navbar">
  <ul>
    <li>Home</li>
    <li>About</li>
    <li>Services</li>
    <li>Contact</li>
  </ul>
</nav>


Task:

.navbar ul li ‚Üí padding, margin, background add ‡§ï‡§∞‡•á‡§Ç‡•§

li:last-child ‚Üí ‡§Ö‡§≤‡§ó ‡§∞‡§Ç‡§ó ‡§¶‡•á‡§Ç‡•§

li:hover ‚Üí hover effect add ‡§ï‡§∞‡•á‡§Ç‡•§

2Ô∏è‚É£ Task: Nested Cards Layout

Scenario:

Div ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ multiple cards ‡§π‡•à‡§Ç‡•§

‡§π‡§∞ card ‡§Æ‡•á‡§Ç title ‡§î‡§∞ description ‡§π‡•à‡•§

Second card ‡§ï‡•Ä background ‡§Ö‡§≤‡§ó ‡§π‡•ã‡§®‡•Ä ‡§ö‡§æ‡§π‡§ø‡§è‡•§

HTML Example:

<div class="cards">
  <div class="card">
    <h3>Card 1</h3>
    <p>Description 1</p>
  </div>
  <div class="card">
    <h3>Card 2</h3>
    <p>Description 2</p>
  </div>
  <div class="card">
    <h3>Card 3</h3>
    <p>Description 3</p>
  </div>
</div>


Task:

.cards .card ‚Üí basic styling‡•§

.cards .card:nth-child(2) ‚Üí background color change‡•§

.cards .card:last-child h3 ‚Üí font-weight bold‡•§

3Ô∏è‚É£ Task: Form Fields Styling

Scenario:

Multiple input fields ‡§î‡§∞ labels ‡§π‡•à‡§Ç‡•§

First input ‡§ï‡§æ border color ‡§Ö‡§≤‡§ó ‡§π‡•ã‡•§

Last input ‡§ï‡§æ border thicker ‡§π‡•ã‡•§

Hover effect ‡§∏‡§≠‡•Ä inputs ‡§Æ‡•á‡§Ç‡•§

HTML Example:

<form class="form">
  <label>Username</label>
  <input type="text">
  <label>Email</label>
  <input type="email">
  <label>Password</label>
  <input type="password">
</form>


Task:

.form input ‚Üí padding, margin add ‡§ï‡§∞‡•á‡§Ç‡•§

.form input:first-child ‚Üí border color red‡•§

.form input:last-child ‚Üí border 2px solid blue‡•§

.form input:hover ‚Üí background change‡•§

4Ô∏è‚É£ Task: Blog Post List

Scenario:

Blog posts ‡§ï‡•á ‡§≤‡§ø‡§è ul > li list ‡§π‡•à‡•§

First post ‡§ï‡§æ background highlighted‡•§

Middle post ‡§ï‡§æ font-size ‡§¨‡§¢‡§º‡§æ‡•§

Last post ‡§ï‡§æ text-align center‡•§

HTML Example:

<ul class="blog-list">
  <li>Post 1: Intro</li>
  <li>Post 2: Tutorial</li>
  <li>Post 3: Advanced Tips</li>
  <li>Post 4: Conclusion</li>
</ul>


Task:

.blog-list li:first-child ‚Üí background color yellow‡•§

.blog-list li:nth-child(2) ‚Üí font-size 20px‡•§

.blog-list li:last-child ‚Üí text-align center‡•§

5Ô∏è‚É£ Task: Footer Links

Scenario:

Footer ‡§Æ‡•á‡§Ç multiple columns ‡§π‡•à‡§Ç‡•§

‡§π‡§∞ column ‡§Æ‡•á‡§Ç links ‡§π‡•à‡§Ç‡•§

Hover ‡§™‡§∞ underline add ‡§ï‡§∞‡§®‡§æ ‡§π‡•à‡•§

Last column ‡§ï‡§æ background ‡§Ö‡§≤‡§ó ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è‡•§

HTML Example:

<footer class="footer">
  <div class="col">
    <a href="#">Link 1</a>
    <a href="#">Link 2</a>
  </div>
  <div class="col">
    <a href="#">Link 3</a>
    <a href="#">Link 4</a>
  </div>
  <div class="col">
    <a href="#">Link 5</a>
    <a href="#">Link 6</a>
  </div>
</footer>


Task:

.footer .col ‚Üí basic background ‡§î‡§∞ padding‡•§

.footer .col:last-child ‚Üí ‡§Ö‡§≤‡§ó background‡•§

.footer .col a:hover ‚Üí underline‡•§

6Ô∏è‚É£ Task: Product Grid

Scenario:

Grid ‡§Æ‡•á‡§Ç products ‡§π‡•à‡§Ç‡•§

‡§∏‡§≠‡•Ä products flex-wrap ‡§Æ‡•á‡§Ç ‡§π‡•à‡§Ç‡•§

‡§π‡§∞ second product ‡§ï‡§æ shadow ‡§Ö‡§≤‡§ó ‡§π‡•ã‡•§

Last product ‡§ï‡§æ scale ‡§¨‡§¢‡§º‡§æ‡§è‡§Ç‡•§

HTML Example:

<div class="products">
  <div class="product">Product 1</div>
  <div class="product">Product 2</div>
  <div class="product">Product 3</div>
  <div class="product">Product 4</div>
</div>


Task:

.products .product ‚Üí padding, margin, background‡•§

.products .product:nth-child(2) ‚Üí box-shadow add‡•§

.products .product:last-child:hover ‚Üí transform scale(1.1)‡•§

7Ô∏è‚É£ Task: Sidebar Navigation

Scenario:

Sidebar ‡§Æ‡•á‡§Ç nested lists ‡§π‡•à‡§Ç‡•§

Top level items ‡§î‡§∞ nested items ‡§Ö‡§≤‡§ó style ‡§π‡•ã‡§Ç‡•§

Hover effect parent ‡§î‡§∞ child ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§™‡§∞‡•§

HTML Example:

<aside class="sidebar">
  <ul>
    <li>Dashboard</li>
    <li>Users
      <ul>
        <li>Add User</li>
        <li>Manage Users</li>
      </ul>
    </li>
    <li>Settings</li>
  </ul>
</aside>


Task:

.sidebar > ul > li ‚Üí main padding, background‡•§

.sidebar ul li ul li ‚Üí nested padding, different background‡•§

.sidebar ul li:hover ‚Üí hover background for parent.

.sidebar ul li ul li:hover ‚Üí hover background for child.

üí° Practice Tips:

‡§π‡§∞ task ‡§ï‡•ã copy + modify ‡§ï‡§∞‡§ï‡•á browser ‡§Æ‡•á‡§Ç check ‡§ï‡§∞‡•ã‡•§

nth-child, first-child, last-child ‡§ï‡•ã combinations ‡§Æ‡•á‡§Ç try ‡§ï‡§∞‡•ã‡•§

Nested divs, ul > li, sidebar ‡§ú‡•à‡§∏‡•á real project elements use ‡§ï‡§∞‡•ã‡•§

Pseudo-classes ‡§ú‡•à‡§∏‡•á hover, focus add ‡§ï‡§∞‡§ï‡•á interactive practice ‡§ï‡§∞‡•ã‡•§

‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡•ã ‡§§‡•ã ‡§Æ‡•à‡§Ç ‡§Ø‡•á ‡§∏‡§æ‡§∞‡•á 7 tasks ‡§ï‡§æ complete ready-to-use HTML + CSS code ‡§≠‡•Ä ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å, ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç ‡§Ü‡§™ directly practice ‡§ï‡§∞ ‡§∏‡§ï‡•ã‡•§

‡§ï‡•ç‡§Ø‡§æ ‡§Æ‡•à‡§Ç ‡§µ‡•ã ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å?

You said:
sure
ChatGPT said:

‡§†‡•Ä‡§ï ‡§π‡•à! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã ‡§∏‡§æ‡§∞‡•á 7 practical tasks ‡§ï‡§æ ready-to-use HTML + CSS code ‡§¨‡§®‡§æ ‡§ï‡§∞ ‡§¶‡•á‡§§‡§æ ‡§π‡•Ç‡§Å‡•§ ‡§Ü‡§™ ‡§á‡§∏‡•á directly browser ‡§Æ‡•á‡§Ç ‡§ñ‡•ã‡§≤‡§ï‡§∞ practice ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•ã‡•§ ‡§á‡§∏‡§Æ‡•á‡§Ç ‡§∏‡§≠‡•Ä selectors, pseudo-classes, nth-child, last-child, hover ‡§Ü‡§¶‡§ø ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§

Practical CSS Selectors Tasks ‚Äì HTML + CSS
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>CSS Selectors Practice</title>
<style>
  body {
    font-family: Arial, sans-serif;
    padding: 20px;
  }

  h2 {
    margin-top: 40px;
    color: #333;
  }

  /* 1. Navbar Menu Styling */
  .navbar ul {
    list-style: none;
    display: flex;
    gap: 20px;
    padding: 0;
  }

  .navbar ul li {
    padding: 10px 15px;
    background: #eee;
    cursor: pointer;
    transition: 0.3s;
  }

  .navbar ul li:last-child {
    background: #4caf50;
    color: white;
  }

  .navbar ul li:hover {
    background: #ccc;
  }

  /* 2. Nested Cards Layout */
  .cards {
    display: flex;
    gap: 20px;
    margin-top: 20px;
  }

  .cards .card {
    padding: 20px;
    background: #f0a500;
    color: white;
    width: 150px;
    border-radius: 8px;
    text-align: center;
  }

  .cards .card:nth-child(2) {
    background: #ff5722;
  }

  .cards .card:last-child h3 {
    font-weight: bold;
  }

  /* 3. Form Fields Styling */
  .form {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-top: 30px;
  }

  .form input {
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 5px;
    transition: 0.3s;
  }

  .form input:first-child {
    border-color: red;
  }

  .form input:last-child {
    border: 2px solid blue;
  }

  .form input:hover {
    background: #f5f5f5;
  }

  /* 4. Blog Post List */
  .blog-list {
    list-style: none;
    padding: 0;
    margin-top: 30px;
  }

  .blog-list li {
    padding: 10px;
    background: #ddd;
    margin-bottom: 5px;
  }

  .blog-list li:first-child {
    background: yellow;
  }

  .blog-list li:nth-child(2) {
    font-size: 18px;
  }

  .blog-list li:last-child {
    text-align: center;
  }

  /* 5. Footer Links */
  .footer {
    display: flex;
    gap: 20px;
    margin-top: 30px;
  }

  .footer .col {
    flex: 1;
    background: #333;
    color: white;
    padding: 15px;
    border-radius: 5px;
  }

  .footer .col:last-child {
    background: #555;
  }

  .footer .col a {
    display: block;
    color: white;
    text-decoration: none;
    margin-bottom: 5px;
    transition: 0.3s;
  }

  .footer .col a:hover {
    text-decoration: underline;
  }

  /* 6. Product Grid */
  .products {
    display: flex;
    gap: 20px;
    flex-wrap: wrap;
    margin-top: 30px;
  }

  .products .product {
    background: #2196f3;
    color: white;
    padding: 20px;
    flex: 1 1 calc(25% - 20px);
    text-align: center;
    border-radius: 5px;
    transition: 0.3s;
  }

  .products .product:nth-child(2) {
    box-shadow: 0 0 10px rgba(0,0,0,0.5);
  }

  .products .product:last-child:hover {
    transform: scale(1.1);
  }

  /* 7. Sidebar Navigation */
  .sidebar ul {
    list-style: none;
    padding: 0;
  }

  .sidebar > ul > li {
    background: #555;
    color: white;
    padding: 10px;
    margin-bottom: 5px;
    cursor: pointer;
    transition: 0.3s;
  }

  .sidebar ul li ul li {
    background: #777;
    padding: 8px 10px 8px 20px;
    margin-bottom: 5px;
    cursor: pointer;
  }

  .sidebar > ul > li:hover {
    background: #444;
  }

  .sidebar ul li ul li:hover {
    background: #666;
  }

</style>
</head>
<body>

<h2>1. Navbar Menu Styling</h2>
<nav class="navbar">
  <ul>
    <li>Home</li>
    <li>About</li>
    <li>Services</li>
    <li>Contact</li>
  </ul>
</nav>

<h2>2. Nested Cards Layout</h2>
<div class="cards">
  <div class="card">
    <h3>Card 1</h3>
    <p>Description 1</p>
  </div>
  <div class="card">
    <h3>Card 2</h3>
    <p>Description 2</p>
  </div>
  <div class="card">
    <h3>Card 3</h3>
    <p>Description 3</p>
  </div>
</div>

<h2>3. Form Fields Styling</h2>
<form class="form">
  <label>Username</label>
  <input type="text">
  <label>Email</label>
  <input type="email">
  <label>Password</label>
  <input type="password">
</form>

<h2>4. Blog Post List</h2>
<ul class="blog-list">
  <li>Post 1: Intro</li>
  <li>Post 2: Tutorial</li>
  <li>Post 3: Advanced Tips</li>
  <li>Post 4: Conclusion</li>
</ul>

<h2>5. Footer Links</h2>
<footer class="footer">
  <div class="col">
    <a href="#">Link 1</a>
    <a href="#">Link 2</a>
  </div>
  <div class="col">
    <a href="#">Link 3</a>
    <a href="#">Link 4</a>
  </div>
  <div class="col">
    <a href="#">Link 5</a>
    <a href="#">Link 6</a>
  </div>
</footer>

<h2>6. Product Grid</h2>
<div class="products">
  <div class="product">Product 1</div>
  <div class="product">Product 2</div>
  <div class="product">Product 3</div>
  <div class="product">Product 4</div>
</div>

<h2>7. Sidebar Navigation</h2>
<aside class="sidebar">
  <ul>
    <li>Dashboard</li>
    <li>Users
      <ul>
        <li>Add User</li>
        <li>Manage Users</li>
      </ul>
    </li>
    <li>Settings</li>
  </ul>
</aside>

</body>
</html>

‚úÖ ‡§á‡§∏ Code ‡§∏‡•á ‡§ï‡•ç‡§Ø‡§æ Practice ‡§π‡•ã‡§ó‡•Ä:

Navbar ‚Üí last-child, hover

Nested Cards ‚Üí nth-child, last-child

Form ‚Üí first-child, last-child, hover

Blog list ‚Üí first-child, nth-child, last-child

Footer ‚Üí last-child, hover

Product Grid ‚Üí nth-child, last-child hover, flex-wrap

Sidebar ‚Üí child, nested child, hover


‡§†‡•Ä‡§ï ‡§π‡•à! ‡§Ö‡§¨ ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã CSS Selectors ‡§ï‡•á Advanced Challenge Tasks ‡§¶‡•á‡§§‡§æ ‡§π‡•Ç‡§Å‡•§ ‡§á‡§®‡§Æ‡•á‡§Ç ‡§Ü‡§™ pseudo-elements, attribute selectors, combinations, nested targeting ‡§ú‡•à‡§∏‡•Ä advanced ‡§ö‡•Ä‡§ú‡§º‡•ã‡§Ç ‡§ï‡•ã project-style practice ‡§ï‡§∞ ‡§∏‡§ï‡•ã‡•§

Advanced CSS Selectors Challenge Tasks
1Ô∏è‚É£ Task: Buttons with Icons using ::before / ::after

Scenario:

‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ buttons ‡§π‡•à‡§Ç‡•§

Button ‡§ï‡•á start ‡§î‡§∞ end ‡§Æ‡•á‡§Ç icon/arrow add ‡§ï‡§∞‡§®‡§æ ‡§π‡•à‡•§

Hover ‡§™‡§∞ color ‡§¨‡§¶‡§≤‡§®‡§æ ‡§π‡•à‡•§

HTML Example:

<button class="btn">Click Me</button>
<button class="btn special">Submit</button>


Task:

.btn::before ‚Üí üî• icon add

.btn::after ‚Üí ‚Üí arrow add

.btn:hover ‚Üí background ‡§î‡§∞ color change

Practice Concepts:

::before, ::after, hover, class selectors

2Ô∏è‚É£ Task: Attribute Selectors in Forms

Scenario:

Form ‡§Æ‡•á‡§Ç text, email, password, checkbox inputs ‡§π‡•à‡§Ç‡•§

Specific type inputs ‡§ï‡•ã ‡§Ö‡§≤‡§ó style ‡§¶‡•á‡§®‡§æ ‡§π‡•à‡•§

HTML Example:

<form class="attribute-form">
  <input type="text" placeholder="Username">
  <input type="email" placeholder="Email">
  <input type="password" placeholder="Password">
  <input type="checkbox"> Accept Terms
</form>


Task:

input[type="text"] ‚Üí border blue

input[type="email"] ‚Üí border green

input[type^="pass"] ‚Üí border red

input[type$="box"] ‚Üí background yellow

Practice Concepts:

Attribute selectors [type="value"], [type^=""], [type$=""]

3Ô∏è‚É£ Task: Nested List with Hover Effects

Scenario:

Sidebar navigation ‡§Æ‡•á‡§Ç nested lists ‡§π‡•à‡§Ç‡•§

Parent ‡§î‡§∞ child items ‡§Ö‡§≤‡§ó background hover effect ‡§ï‡•á ‡§∏‡§æ‡§•‡•§

HTML Example:

<aside class="nested-sidebar">
  <ul>
    <li>Main 1
      <ul>
        <li>Child 1</li>
        <li>Child 2</li>
      </ul>
    </li>
    <li>Main 2
      <ul>
        <li>Child 3</li>
        <li>Child 4</li>
      </ul>
    </li>
  </ul>
</aside>


Task:

.nested-sidebar > ul > li ‚Üí background, padding

.nested-sidebar ul li ul li ‚Üí nested background, padding-left

li:hover ‚Üí hover background

li ul li:hover ‚Üí nested hover background

Practice Concepts:

Child selector >, descendant selector (space), nested targeting

4Ô∏è‚É£ Task: Blog Cards with nth-child Patterns

Scenario:

Multiple blog cards ‡§π‡•à‡§Ç‡•§

Odd cards ‡§ï‡§æ background ‡§Ö‡§≤‡§ó, even cards ‡§ï‡§æ font-size ‡§Ö‡§≤‡§ó‡•§

Third card ‡§Æ‡•á‡§Ç special border‡•§

HTML Example:

<div class="blog-cards">
  <div class="card">Blog 1</div>
  <div class="card">Blog 2</div>
  <div class="card">Blog 3</div>
  <div class="card">Blog 4</div>
</div>


Task:

.blog-cards .card:nth-child(odd) ‚Üí background #eee

.blog-cards .card:nth-child(even) ‚Üí font-size 18px

.blog-cards .card:nth-child(3) ‚Üí border 2px solid red

Practice Concepts:

nth-child(odd/even/n), combination selectors

5Ô∏è‚É£ Task: Footer Links with Attribute + Hover

Scenario:

Footer ‡§Æ‡•á‡§Ç links ‡§π‡•à‡§Ç‡•§

External links (target="_blank") ‡§ï‡•ã ‡§Ö‡§≤‡§ó color ‡§¶‡•á‡§®‡§æ ‡§π‡•à‡•§

Hover ‡§™‡§∞ underline add ‡§ï‡§∞‡§®‡§æ ‡§π‡•à‡•§

HTML Example:

<footer class="footer-attr">
  <a href="https://google.com" target="_blank">Google</a>
  <a href="/about">About Us</a>
  <a href="https://github.com" target="_blank">Github</a>
</footer>


Task:

a[target="_blank"] ‚Üí color red

a:hover ‚Üí text-decoration underline

a:not([target="_blank"]) ‚Üí color blue

Practice Concepts:

Attribute selectors, :not(), hover

6Ô∏è‚É£ Task: Product Grid with last-child hover

Scenario:

Product grid ‡§Æ‡•á‡§Ç multiple products ‡§π‡•à‡§Ç‡•§

Last product hover ‡§™‡§∞ scale ‡§î‡§∞ shadow effect‡•§

Every second product ‡§ï‡§æ box-shadow ‡§Ö‡§≤‡§ó‡•§

HTML Example:

<div class="grid-products">
  <div class="product">Product 1</div>
  <div class="product">Product 2</div>
  <div class="product">Product 3</div>
  <div class="product">Product 4</div>
</div>


Task:

.grid-products .product:nth-child(2) ‚Üí box-shadow

.grid-products .product:last-child:hover ‚Üí transform: scale(1.1), shadow

Practice Concepts:

nth-child(), last-child, hover, transform

7Ô∏è‚É£ Task: Multi-level Sidebar with Pseudo-elements

Scenario:

Sidebar ‡§Æ‡•á‡§Ç parent items ‡§î‡§∞ child items ‡§π‡•à‡§Ç‡•§

Parent items ‡§ï‡•á ‡§™‡§π‡§≤‡•á icon add ‡§ï‡§∞‡§®‡§æ ‡§π‡•à‡•§

Nested items ‡§ï‡•á ‡§¨‡§æ‡§¶ arrow add ‡§ï‡§∞‡§®‡§æ ‡§π‡•à‡•§

HTML Example:

<aside class="sidebar-pseudo">
  <ul>
    <li>Dashboard
      <ul>
        <li>Child 1</li>
        <li>Child 2</li>
      </ul>
    </li>
    <li>Settings
      <ul>
        <li>Child 3</li>
        <li>Child 4</li>
      </ul>
    </li>
  </ul>
</aside>


Task:

.sidebar-pseudo > ul > li::before ‚Üí icon add (üî•)

.sidebar-pseudo ul li ul li::after ‚Üí arrow (‚Üí)

Hover effect for both parent and child

Practice Concepts:

::before, ::after, nested selectors, hover

üí° Practice Tips:

‡§π‡§∞ task ‡§ï‡•ã ‡§Ö‡§≤‡§ó HTML file ‡§Æ‡•á‡§Ç try ‡§ï‡§∞‡•ã‡•§

Combine nth-child, last-child, hover, ::before, ::after ‚Üí realistic layouts‡•§

Forms, cards, grids, navbar, sidebar ‚Üí project style scenarios‡•§

Experiment: ‡§Ö‡§≤‡§ó selectors mix ‡§ï‡§∞‡•ã ‚Üí ‡§ú‡•à‡§∏‡•á .parent > ul li:last-child a:hover::after


‡§†‡•Ä‡§ï ‡§π‡•à! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã 7 Advanced Challenge Tasks ‡§ï‡§æ Complete Ready-to-Use HTML + CSS Code ‡§¨‡§®‡§æ ‡§ï‡§∞ ‡§¶‡•á‡§§‡§æ ‡§π‡•Ç‡§Å‡•§ ‡§á‡§∏‡•á ‡§Ü‡§™ directly browser ‡§Æ‡•á‡§Ç open ‡§ï‡§∞‡§ï‡•á live practice ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•ã‡•§ ‡§á‡§∏‡§Æ‡•á‡§Ç ‡§∏‡§≠‡•Ä pseudo-elements, attribute selectors, nth-child, last-child, hover, nested selectors ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§

Advanced CSS Selectors ‚Äì Ready-to-Use Code
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Advanced CSS Selectors Practice</title>
<style>
body {
  font-family: Arial, sans-serif;
  padding: 20px;
}

h2 {
  margin-top: 40px;
  color: #333;
}

/* 1. Buttons with ::before / ::after */
.btn {
  padding: 10px 20px;
  background: #4caf50;
  color: white;
  border: none;
  border-radius: 5px;
  margin-right: 10px;
  cursor: pointer;
  transition: 0.3s;
  position: relative;
}

.btn::before {
  content: "üî• ";
}

.btn::after {
  content: " ‚Üí";
  margin-left: 5px;
}

.btn:hover {
  background: darkgreen;
  color: yellow;
}

.btn.special {
  background: #2196f3;
}

/* 2. Attribute Selectors */
.attribute-form {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin-top: 30px;
}

.attribute-form input {
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 5px;
}

.attribute-form input[type="text"] {
  border-color: blue;
}

.attribute-form input[type="email"] {
  border-color: green;
}

.attribute-form input[type^="pass"] {
  border-color: red;
}

.attribute-form input[type$="box"] {
  background: yellow;
}

/* 3. Nested Sidebar Lists */
.nested-sidebar ul {
  list-style: none;
  padding: 0;
}

.nested-sidebar > ul > li {
  background: #555;
  color: white;
  padding: 10px;
  margin-bottom: 5px;
  cursor: pointer;
  transition: 0.3s;
}

.nested-sidebar ul li ul li {
  background: #777;
  padding: 8px 10px 8px 20px;
  margin-bottom: 5px;
}

.nested-sidebar > ul > li:hover {
  background: #444;
}

.nested-sidebar ul li ul li:hover {
  background: #666;
}

/* 4. Blog Cards nth-child */
.blog-cards {
  display: flex;
  gap: 20px;
  flex-wrap: wrap;
  margin-top: 30px;
}

.blog-cards .card {
  flex: 1 1 calc(25% - 20px);
  padding: 20px;
  background: #ccc;
  text-align: center;
  border-radius: 5px;
  transition: 0.3s;
}

.blog-cards .card:nth-child(odd) {
  background: #eee;
}

.blog-cards .card:nth-child(even) {
  font-size: 18px;
}

.blog-cards .card:nth-child(3) {
  border: 2px solid red;
}

/* 5. Footer Links with Attribute + Hover */
.footer-attr a {
  display: block;
  margin-bottom: 5px;
  color: blue;
  text-decoration: none;
  transition: 0.3s;
}

.footer-attr a[target="_blank"] {
  color: red;
}

.footer-attr a:hover {
  text-decoration: underline;
}

.footer-attr a:not([target="_blank"]) {
  color: green;
}

/* 6. Product Grid last-child hover */
.grid-products {
  display: flex;
  gap: 20px;
  flex-wrap: wrap;
  margin-top: 30px;
}

.grid-products .product {
  flex: 1 1 calc(25% - 20px);
  padding: 20px;
  background: #2196f3;
  color: white;
  text-align: center;
  border-radius: 5px;
  transition: 0.3s;
}

.grid-products .product:nth-child(2) {
  box-shadow: 0 0 10px rgba(0,0,0,0.5);
}

.grid-products .product:last-child:hover {
  transform: scale(1.1);
  box-shadow: 0 0 15px rgba(0,0,0,0.7);
}

/* 7. Multi-level Sidebar with Pseudo-elements */
.sidebar-pseudo ul {
  list-style: none;
  padding: 0;
}

.sidebar-pseudo > ul > li {
  background: #555;
  color: white;
  padding: 10px;
  margin-bottom: 5px;
  cursor: pointer;
  position: relative;
}

.sidebar-pseudo > ul > li::before {
  content: "üî• ";
  position: absolute;
  left: -25px;
}

.sidebar-pseudo ul li ul li::after {
  content: " ‚Üí";
  margin-left: 5px;
}

.sidebar-pseudo ul li ul li {
  background: #777;
  padding: 8px 10px 8px 20px;
  margin-bottom: 5px;
}

.sidebar-pseudo > ul > li:hover {
  background: #444;
}

.sidebar-pseudo ul li ul li:hover {
  background: #666;
}

</style>
</head>
<body>

<h2>1. Buttons with Icons</h2>
<button class="btn">Click Me</button>
<button class="btn special">Submit</button>

<h2>2. Attribute Selectors in Form</h2>
<form class="attribute-form">
  <input type="text" placeholder="Username">
  <input type="email" placeholder="Email">
  <input type="password" placeholder="Password">
  <input type="checkbox"> Accept Terms
</form>

<h2>3. Nested Sidebar</h2>
<aside class="nested-sidebar">
  <ul>
    <li>Main 1
      <ul>
        <li>Child 1</li>
        <li>Child 2</li>
      </ul>
    </li>
    <li>Main 2
      <ul>
        <li>Child 3</li>
        <li>Child 4</li>
      </ul>
    </li>
  </ul>
</aside>

<h2>4. Blog Cards</h2>
<div class="blog-cards">
  <div class="card">Blog 1</div>
  <div class="card">Blog 2</div>
  <div class="card">Blog 3</div>
  <div class="card">Blog 4</div>
</div>

<h2>5. Footer Links with Attribute</h2>
<footer class="footer-attr">
  <a href="https://google.com" target="_blank">Google</a>
  <a href="/about">About Us</a>
  <a href="https://github.com" target="_blank">Github</a>
</footer>

<h2>6. Product Grid</h2>
<div class="grid-products">
  <div class="product">Product 1</div>
  <div class="product">Product 2</div>
  <div class="product">Product 3</div>
  <div class="product">Product 4</div>
</div>

<h2>7. Multi-level Sidebar with Pseudo-elements</h2>
<aside class="sidebar-pseudo">
  <ul>
    <li>Dashboard
      <ul>
        <li>Child 1</li>
        <li>Child 2</li>
      </ul>
    </li>
    <li>Settings
      <ul>
        <li>Child 3</li>
        <li>Child 4</li>
      </ul>
    </li>
  </ul>
</aside>

</body>
</html>

‚úÖ ‡§á‡§∏ Code ‡§∏‡•á ‡§ï‡•ç‡§Ø‡§æ Practice ‡§π‡•ã‡§ó‡•Ä:

Buttons ‚Üí ::before, ::after, hover

Forms ‚Üí Attribute selectors [type=""], [type^=""], [type$=""]

Nested Sidebar ‚Üí child selector >, nested selector, hover

Blog Cards ‚Üí nth-child(odd/even/n), border, font-size

Footer Links ‚Üí target="_blank", :not(), hover

Product Grid ‚Üí nth-child, last-child, hover, transform

Multi-level Sidebar ‚Üí ::before, ::after, nested, hover