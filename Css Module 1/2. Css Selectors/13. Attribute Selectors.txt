Attribute Selectors

‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤! üòé
‡§Ö‡§¨ ‡§π‡§Æ CSS Attribute Selectors ‡§ï‡•ã ‡§™‡•Ç‡§∞‡•Ä detail ‡§Æ‡•á‡§Ç ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§ù‡•á‡§Ç‡§ó‡•á‡•§
‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã step by step ‡§¨‡§§‡§æ‡§ä‡§Å‡§ó‡§æ: ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à, ‡§ï‡•ç‡§Ø‡•ã‡§Ç, ‡§ï‡§¨, ‡§ï‡§π‡§æ‡§Å ‡§î‡§∞ ‡§ï‡•à‡§∏‡•á use ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç, ‡§∏‡§æ‡§• ‡§π‡•Ä ‡§∏‡§≠‡•Ä conditions + examples ‡§≠‡•Ä ‡§¶‡§ø‡§ñ‡§æ‡§ä‡§Å‡§ó‡§æ‡•§

üü¢ Attribute Selectors ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à‡§Ç?

Attribute Selector CSS ‡§Æ‡•á‡§Ç use ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à HTML elements ‡§ï‡•ã ‡§â‡§®‡§ï‡•á attributes ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ style ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§

Syntax:

[element[attribute]] { ... }      /* ‡§ï‡§ø‡§∏‡•Ä element ‡§ï‡•á attribute ‡§Æ‡•å‡§ú‡•Ç‡§¶ ‡§π‡•ã‡§®‡•á ‡§™‡§∞ */
[element[attribute="value"]] { ... } /* ‡§ï‡§ø‡§∏‡•Ä element ‡§ï‡•á attribute ‡§ï‡§æ specific value match ‡§ï‡§∞‡§®‡•á ‡§™‡§∞ */

üß© Types of Attribute Selectors
1Ô∏è‚É£ [attr] ‚Üí Attribute Exist Selector

Meaning:

‡§â‡§® elements ‡§ï‡•ã target ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ú‡§ø‡§®‡§Æ‡•á‡§Ç specified attribute ‡§Æ‡•å‡§ú‡•Ç‡§¶ ‡§π‡•à‡•§

Example:

<input type="text">
<input type="password">
<input name="username">

input[type] {
  border: 2px solid green;
}


Result:

‡§ï‡•á‡§µ‡§≤ type attribute ‡§µ‡§æ‡§≤‡•á input elements styled ‚úÖ

name="username" ‡§µ‡§æ‡§≤‡§æ input ignored ‚ùå

2Ô∏è‚É£ [attr="value"] ‚Üí Exact Match

Meaning:

Target elements ‡§ú‡§ø‡§®‡§Æ‡•á‡§Ç attribute exactly given value ‡§π‡•ã‡•§

Example:

<input type="text">
<input type="password">
<input type="email">

input[type="text"] {
  background-color: yellow;
}


Result:

‡§ï‡•á‡§µ‡§≤ type="text" ‡§µ‡§æ‡§≤‡§æ input styled ‚úÖ

‡§¨‡§æ‡§ï‡§ø ignored ‚ùå

3Ô∏è‚É£ [attr~="value"] ‚Üí Word Contains

Meaning:

Attribute ‡§Æ‡•á‡§Ç space-separated word list ‡§Æ‡•á‡§Ç value present ‡§π‡•ã‡•§

Example:

<p class="intro highlight">Paragraph 1</p>
<p class="intro">Paragraph 2</p>

p[class~="highlight"] {
  color: red;
}


Result:

‡§ï‡•á‡§µ‡§≤ class ‡§Æ‡•á‡§Ç highlight present ‡§µ‡§æ‡§≤‡•á paragraph styled ‚úÖ

Paragraph 2 ignored ‚ùå

4Ô∏è‚É£ [attr|="value"] ‚Üí Hyphen-separated prefix

Meaning:

Attribute value exactly match ‡§Ø‡§æ value- ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§®‡•á ‡§™‡§∞ style apply‡•§

Mostly language codes ‡§Ø‡§æ prefix use ‡§Æ‡•á‡§Ç‡•§

Example:

<p lang="en">English text ‚úÖ</p>
<p lang="en-US">US English text ‚úÖ</p>
<p lang="fr">French text ‚ùå</p>

p[lang|="en"] {
  color: blue;
}


Result:

lang="en" ‡§î‡§∞ lang="en-US" styled ‚úÖ

lang="fr" ignored ‚ùå

5Ô∏è‚É£ [attr^="value"] ‚Üí Starts With

Meaning:

Attribute value value ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è‡•§

Example:

<a href="https://google.com">Google</a>
<a href="http://example.com">Example</a>

a[href^="https"] {
  color: green;
}


Result:

‡§ï‡•á‡§µ‡§≤ https link green ‚úÖ

http ignored ‚ùå

6Ô∏è‚É£ [attr$="value"] ‚Üí Ends With

Meaning:

Attribute value value ‡§™‡§∞ ‡§ñ‡§§‡•ç‡§Æ ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è‡•§

Example:

<img src="logo.png">
<img src="banner.jpg">

img[src$=".png"] {
  border: 2px solid red;
}


Result:

‡§ï‡•á‡§µ‡§≤ png images styled ‚úÖ

jpg ignored ‚ùå

7Ô∏è‚É£ [attr*="value"] ‚Üí Contains

Meaning:

Attribute value ‡§Æ‡•á‡§Ç value anywhere present ‡§π‡•ã‡•§

Example:

<button class="btn-primary">Submit</button>
<button class="btn-secondary">Cancel</button>

button[class*="btn"] {
  padding: 10px 20px;
  border-radius: 5px;
}


Result:

‡§¶‡•ã‡§®‡•ã‡§Ç buttons styled ‚úÖ ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø class ‡§Æ‡•á‡§Ç "btn" word present ‡§π‡•à

üîπ Real-World Project Use Cases
1Ô∏è‚É£ Form Inputs Styling
input[type="text"] {
  border: 2px solid green;
}

input[type="password"] {
  border: 2px solid red;
}

2Ô∏è‚É£ External Links
a[href^="https"] {
  color: blue;
  text-decoration: underline;
}

3Ô∏è‚É£ Downloadable Files
a[href$=".pdf"]::after {
  content: " (PDF)";
  color: red;
}

4Ô∏è‚É£ Buttons Common Classes
button[class*="btn"] {
  background-color: #009688;
  color: white;
  padding: 8px 16px;
}

5Ô∏è‚É£ Language-specific Styling
p[lang|="en"] {
  font-weight: bold;
}
p[lang|="fr"] {
  font-style: italic;
}

6Ô∏è‚É£ Navigation Highlight
nav a[href*="about"] {
  font-weight: bold;
}

üß† Why (‡§ï‡•ç‡§Ø‡•ã‡§Ç use ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç?)

Attribute-based targeting ‡§∏‡•á semantic HTML maintain ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§

Extra classes ‡§® ‡§°‡§æ‡§≤‡§ï‡§∞ specific elements target ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§

Forms, links, buttons, images, inputs, language codes ‡§Æ‡•á‡§Ç ‡§¨‡§π‡•Å‡§§ useful‡•§

Responsive projects, dynamic content ‡§Æ‡•á‡§Ç flexibility ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§

üìç Where (‡§ï‡§π‡§æ‡§Å use ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç?)

Forms ‚Üí type, placeholder, required attributes

Links ‚Üí href, target

Buttons ‚Üí class, id, data-* attributes

Images ‚Üí src, alt

Multi-language websites ‚Üí lang attribute

‚è∞ When (‡§ï‡§¨ use ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç?)

‡§ú‡§¨ specific element type + attribute target ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã‡•§

‡§ú‡§¨ extra classes avoid ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã‡•§

When working with dynamic HTML content (CMS, React, Angular, WordPress)

‚öôÔ∏è Tips & Best Practices

^ ‚Üí starts with

$ ‚Üí ends with

* ‚Üí contains anywhere

~ ‚Üí contains word in space-separated list

| ‚Üí starts with value or value- prefix (mostly lang)

Prefer semantic attribute selectors instead of extra classes for maintainable CSS.

‚úÖ Quick Recap Table
Selector	Meaning	Example	Result
[attr]	Attribute exists	input[type]	All inputs with type
[attr="value"]	Exact match	input[type="text"]	Only type="text"
[attr~="value"]	Space-separated word	p[class~="highlight"]	class contains "highlight"
`[attr	="value"]`	Hyphen separated	`p[lang
[attr^="value"]	Starts with	a[href^="https"]	href starts with https
[attr$="value"]	Ends with	img[src$=".png"]	src ends with .png
[attr*="value"]	Contains	button[class*="btn"]	class contains "btn"

| Selector          | Meaning              | Example                 | Result                     |         |                           |
| ----------------- | -------------------- | ----------------------- | -------------------------- | ------- | ------------------------- |
| `[attr]`          | Attribute exists     | `input[type]`           | All inputs with type       |         |                           |
| `[attr="value"]`  | Exact match          | `input[type="text"]`    | Only type="text"           |         |                           |
| `[attr~="value"]` | Space-separated word | `p[class~="highlight"]` | class contains "highlight" |         |                           |
| `[attr            | ="value"]`           | Hyphen separated        | `p[lang                    | ="en"]` | lang="en" or lang="en-US" |
| `[attr^="value"]` | Starts with          | `a[href^="https"]`      | href starts with https     |         |                           |
| `[attr$="value"]` | Ends with            | `img[src$=".png"]`      | src ends with .png         |         |                           |
| `[attr*="value"]` | Contains             | `button[class*="btn"]`  | class contains "btn"       |         |                           |
