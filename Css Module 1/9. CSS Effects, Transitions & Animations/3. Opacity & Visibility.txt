Opacity & Visibility explains in details in Hindi with examples and different- different conditions and what, why, when, where and how to use it and also give me interview question and answers to related this topics

‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤! ‡§ö‡§≤‡•ã ‚ÄúOpacity & Visibility in CSS‚Äù ‡§ï‡•ã ‡§è‡§ï‡§¶‡§Æ ‡§ó‡§π‡§∞‡§æ‡§à ‡§∏‡•á ‡§∏‡§Æ‡§ù‡§§‡•á ‡§π‡•à‡§Ç‡•§
‡§Æ‡•à‡§Ç ‡§á‡§∏‡•á step-by-step ‡§∏‡§Æ‡§ù‡§æ‡§ä‡§Å‡§ó‡§æ: ‡§ï‡•ç‡§Ø‡§æ, ‡§ï‡•ç‡§Ø‡•ã‡§Ç, ‡§ï‡§¨, ‡§ï‡§π‡§æ‡§Å, ‡§ï‡•à‡§∏‡•á, ‡§∏‡§æ‡§• ‡§π‡•Ä examples, conditions, ‡§î‡§∞ interview Q&A‡•§

1Ô∏è‚É£ Opacity ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?
üîπ Definition:

Opacity ‡§è‡§ï CSS property ‡§π‡•à ‡§ú‡•ã ‡§ï‡§ø‡§∏‡•Ä element ‡§ï‡•Ä transparency (‡§™‡§æ‡§∞‡§¶‡§∞‡•ç‡§∂‡§ø‡§§‡§æ) ‡§ï‡•ã control ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡•§

Value 0 ‚Üí ‡§™‡•Ç‡§∞‡•Ä ‡§§‡§∞‡§π transparent (‡§® ‡§¶‡§ø‡§ñ‡•á)

Value 1 ‚Üí ‡§™‡•Ç‡§∞‡•Ä ‡§§‡§∞‡§π opaque (normal)

Value 0.5 ‚Üí ‡§Ü‡§ß‡•Ä ‡§™‡§æ‡§∞‡§¶‡§∞‡•ç‡§∂‡§ø‡§§‡§æ

üîπ Syntax:
selector {
  opacity: 0.5; /* 50% transparent */
}

üîπ Example:
<div class="box">Hello</div>
<style>
.box {
  width: 200px;
  height: 100px;
  background: tomato;
  color: white;
  opacity: 0.6;
}
</style>


üí° Note: Opacity affects child elements ‡§≠‡•Ä‡•§ ‡§Ø‡§æ‡§®‡•Ä parent ‡§™‡§∞ opacity:0.5 ‡§≤‡§ó‡§æ‡§®‡•á ‡§∏‡•á child ‡§≠‡•Ä 50% transparent ‡§π‡•ã‡§Ç‡§ó‡•á‡•§

2Ô∏è‚É£ Visibility ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?
üîπ Definition:

Visibility property decide ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à ‡§ï‡§ø element render ‡§§‡•ã ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§≤‡•á‡§ï‡§ø‡§® ‡§¶‡§ø‡§ñ‡§æ‡§à ‡§¶‡•á‡§§‡§æ ‡§π‡•à ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç‡•§

üîπ Values:
Value	Meaning
visible	Default, element ‡§¶‡§ø‡§ñ‡§æ‡§à ‡§¶‡•á‡§ó‡§æ
hidden	Element invisible, ‡§≤‡•á‡§ï‡§ø‡§® space occupy ‡§ï‡§∞‡•á‡§ó‡§æ
collapse	Table rows/columns ‡§Æ‡•á‡§Ç use ‡§π‡•ã‡§§‡§æ ‡§π‡•à, space collapse ‡§ï‡§∞‡§§‡§æ ‡§π‡•à

| Value      | Meaning                                                    |
| ---------- | ---------------------------------------------------------- |
| `visible`  | Default, element ‡§¶‡§ø‡§ñ‡§æ‡§à ‡§¶‡•á‡§ó‡§æ                                |
| `hidden`   | Element invisible, ‡§≤‡•á‡§ï‡§ø‡§® space occupy ‡§ï‡§∞‡•á‡§ó‡§æ                |
| `collapse` | Table rows/columns ‡§Æ‡•á‡§Ç use ‡§π‡•ã‡§§‡§æ ‡§π‡•à, space collapse ‡§ï‡§∞‡§§‡§æ ‡§π‡•à |

üîπ Syntax:
selector {
  visibility: hidden;
}

üîπ Example:
<p class="text">Hello World</p>
<style>
.text {
  visibility: hidden; /* invisible but space reserved */
}
</style>


üí° Note: Unlike opacity, child elements are also hidden but space remains.

3Ô∏è‚É£ Opacity vs Visibility vs Display
Property	Affects children?	Space occupied?	Transition possible?
opacity	Yes	Yes	Yes
visibility	Yes	Yes	Yes (with transition)
display	Yes	No	Not smooth (cannot animate display directly)

| Property     | Affects children? | Space occupied? | Transition possible?                         |
| ------------ | ----------------- | --------------- | -------------------------------------------- |
| `opacity`    | Yes               | Yes             | Yes                                          |
| `visibility` | Yes               | Yes             | Yes (with transition)                        |
| `display`    | Yes               | No              | Not smooth (cannot animate display directly) |

üîπ Example with transition:
.box {
  opacity: 0;
  transition: opacity 0.5s ease;
}
.box.show {
  opacity: 1;
}

4Ô∏è‚É£ Different Conditions / Use Cases
üîπ Condition 1: Smooth hide/show

Use opacity + visibility combination:

.box {
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.5s ease, visibility 0.5s;
}
.box.show {
  opacity: 1;
  visibility: visible;
}

üîπ Condition 2: Instant hide/show but space reserved

Use visibility: hidden/visible

No fade effect but layout stable

üîπ Condition 3: Remove from layout

Use display: none/block

No animation possible

üîπ Condition 4: Hover effects

Make element appear on hover using opacity:

.container:hover .tooltip {
  opacity: 1;
}

5Ô∏è‚É£ Performance Tips

Opacity transitions are GPU accelerated ‚Üí smooth animations.

Avoid animating visibility alone for smooth effect; combine with opacity.

Use will-change: opacity; for heavy elements (sparingly).

display cannot be animated ‚Üí must combine with opacity/visibility for smoothness.

6Ô∏è‚É£ Accessibility Considerations

Do not hide content with opacity only for screen readers ‚Üí use aria-hidden="true" if needed.

Ensure focusable elements are not hidden via opacity only.

7Ô∏è‚É£ Real-world Examples
Example 1: Tooltip with opacity
<div class="container">
  Hover me
  <span class="tooltip">Tooltip Text</span>
</div>
<style>
.container { position: relative; display: inline-block; }
.tooltip {
  position: absolute;
  bottom: 100%; left: 50%;
  transform: translateX(-50%);
  opacity: 0; visibility: hidden;
  background: black; color: white; padding:5px 10px; border-radius:4px;
  transition: opacity 0.3s ease;
}
.container:hover .tooltip {
  opacity: 1; visibility: visible;
}
</style>

Example 2: Fade-in modal
.modal {
  opacity: 0; visibility: hidden;
  transition: opacity 0.4s ease;
}
.modal.show {
  opacity: 1; visibility: visible;
}

Example 3: Hide element but keep layout
.box {
  visibility: hidden; /* space remains */
}

8Ô∏è‚É£ Interview Questions & Answers (Advanced / Logic Based)
Q1. Opacity ‡§î‡§∞ Visibility ‡§Æ‡•á‡§Ç ‡§ï‡•ç‡§Ø‡§æ ‡§´‡§∞‡•ç‡§ï ‡§π‡•à?

A:

Opacity ‚Üí transparent, space occupied, child affected, animatable

Visibility ‚Üí invisible but space reserved, child affected, animatable

Display ‚Üí removed from layout, cannot animate

Q2. Smooth hide/show ‡§ï‡•à‡§∏‡•á implement ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á?

A: Combine opacity + visibility with transition:

opacity:0; visibility:hidden; transition: 0.5s ease;

Q3. ‡§ï‡•ç‡§Ø‡•ã‡§Ç display:none ‡§ï‡•ã directly animate ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á?

A: Display affect layout ‚Üí browser cannot interpolate ‚Üí no smooth transition possible. Must use opacity/visibility.

Q4. Hover ‡§™‡§∞ tooltip fade-in effect ‡§ï‡•à‡§∏‡•á ‡§¶‡•á‡§Ç‡§ó‡•á?

A:

Set initial opacity:0; visibility:hidden

On hover ‚Üí opacity:1; visibility:visible; transition:opacity 0.3s

Q5. ‡§ï‡•ç‡§Ø‡§æ opacity:hidden element focusable ‡§∞‡§π‡§§‡§æ ‡§π‡•à?

A: ‡§π‡§æ‡§Å, opacity 0 ‡§π‡•ã‡§®‡•á ‡§™‡§∞ element DOM ‡§Æ‡•á‡§Ç ‡§π‡•à, ‡§á‡§∏‡§≤‡§ø‡§è tab/focus possible.

‡§Ö‡§ó‡§∞ completely hide ‡§ï‡§∞‡§®‡§æ ‡§π‡•à ‚Üí use visibility:hidden or display:none + aria-hidden=true

Q6. ‡§ï‡•ç‡§Ø‡§æ visibility:hidden element occupy ‡§ï‡§∞‡§§‡§æ ‡§π‡•à?

A: ‡§π‡§æ‡§Å, layout space reserved ‡§∞‡§π‡§§‡§æ ‡§π‡•à‡•§

‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç space remove ‡§π‡•ã ‚Üí use display:none

Q7. Animation/transition ‡§ï‡•á ‡§≤‡§ø‡§è best practice ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?

A:

Smooth effect ‚Üí combine opacity + visibility

GPU friendly ‚Üí animate opacity

Avoid display animation

Q8. Condition-Based Question:

‚Äú‡§Ü‡§™ hover ‡§™‡§∞ element show ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç ‡§≤‡•á‡§ï‡§ø‡§® child element ‡§≠‡•Ä fade ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á?‚Äù

Answer:

Parent ‡§™‡§∞ transition set ‡§ï‡§∞‡•á‡§Ç

Child element inherit opacity

Or parent opacity + child absolute positioned + transition

Q9. Logic Question:

‚Äú‡§ï‡§ø‡§∏‡•Ä modal ‡§ï‡•ã fade-in ‡§î‡§∞ fade-out ‡§ï‡§∞‡§®‡§æ ‡§π‡•à‡•§ User fast click ‡§ï‡§∞‡§§‡§æ ‡§π‡•à multiple times‡•§ Transition glitch ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è‡•§ ‡§ï‡•à‡§∏‡•á handle ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á?‚Äù

Answer:

JS ‡§∏‡•á previous state check ‡§ï‡§∞‡•á‡§Ç ‚Üí remove / reset class

Or CSS only ‚Üí use transitionend event to sync state changes

Q10. Advanced Interview:

‚ÄúOpacity 0 ‡§µ‡§æ‡§≤‡•á element ‡§ï‡•ã focus/hover ‡§Æ‡•á‡§Ç interactable ‡§ï‡•à‡§∏‡•á ‡§¨‡§®‡§æ‡§è‡§Ç?‚Äù

Answer:

Opacity 0 ‚Üí invisible but focusable ‚Üí use pointer-events:none when hidden

Visible state ‚Üí opacity:1; pointer-events:auto


Give me more interview questions and answers for advanced to mastery level, including situation and condition-based questions and logic based

‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤! ‡§ö‡§≤‡•ã CSS Opacity & Visibility ‡§ï‡•á ‡§≤‡§ø‡§è Advanced ‡§∏‡•á Mastery Level Interview Questions & Answers step-by-step ‡§∏‡§Æ‡§ù‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Æ‡•à‡§Ç ‡§á‡§∏‡•á logic, situation, condition-based ‡§§‡§∞‡•Ä‡§ï‡•á ‡§∏‡•á ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§ï‡§∞ ‡§∞‡§π‡§æ ‡§π‡•Ç‡§Å‡•§

üß† Advanced/Logic-Based Interview Q&A ‚Äì Opacity & Visibility
‚öôÔ∏è 1. Deep Concept & Logic-Based Questions
Q1. Opacity ‡§î‡§∞ Visibility ‡§Æ‡•á‡§Ç ‡§Ö‡§Ç‡§§‡§∞ ‡§∏‡§ø‡§∞‡•ç‡§´ visual ‡§π‡•Ä ‡§π‡•à ‡§Ø‡§æ functional ‡§≠‡•Ä?

Answer:

Opacity: ‡§ï‡•á‡§µ‡§≤ visual; element DOM ‡§Æ‡•á‡§Ç ‡§∞‡§π‡§§‡§æ ‡§π‡•à, space occupied ‡§∞‡§π‡§§‡§æ ‡§π‡•à, interactable ‡§∞‡§π‡§§‡§æ ‡§π‡•à‡•§

Visibility: Invisible ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§≤‡•á‡§ï‡§ø‡§® space occupied ‡§∞‡§π‡§§‡§æ ‡§π‡•à, interactable ‡§®‡§π‡•Ä‡§Ç (pointer-events:none ‡§Ø‡§æ hidden element focus ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§§‡§æ)‡•§

Logic Tip: Accessibility ‡§î‡§∞ pointer interaction ‡§π‡§Æ‡•á‡§∂‡§æ consider ‡§ï‡§∞‡•á‡§Ç‡•§

Q2. Opacity 0 ‡§µ‡§æ‡§≤‡•á element ‡§ï‡•ã click ‡§Ø‡§æ focus ‡§ï‡•à‡§∏‡•á ‡§∞‡•ã‡§ï‡•á‡§Ç‡§ó‡•á?

Answer:

CSS: pointer-events: none;

Logic: ‡§∏‡§ø‡§∞‡•ç‡§´ opacity ‡§¨‡§¶‡§≤‡§®‡§æ ‡§™‡§∞‡•ç‡§Ø‡§æ‡§™‡•ç‡§§ ‡§®‡§π‡•Ä‡§Ç; invisible element ‡§™‡§∞ interaction block ‡§ï‡§∞‡§®‡§æ ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•à‡•§

Q3. Visibility hidden ‡§ï‡•á ‡§∏‡§æ‡§• transition ‡§ï‡•à‡§∏‡•á possible ‡§π‡•à?

Answer:

Transition directly on visibility ‡§®‡§π‡•Ä‡§Ç possible, ‡§≤‡•á‡§ï‡§ø‡§® combine ‡§ï‡§∞‡•á‡§Ç opacity + visibility.

.element {
  opacity:0; visibility:hidden; transition: opacity 0.3s ease;
}
.element.show {
  opacity:1; visibility:visible;
}

Q4. Display:none ‡§î‡§∞ Visibility:hidden ‡§Æ‡•á‡§Ç difference ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?

Answer:

Property	Space	Children	Transition
display:none	Removed	Removed	Cannot animate
visibility:hidden	Reserved	Hidden	Can animate with opacity

| Property          | Space    | Children | Transition               |
| ----------------- | -------- | -------- | ------------------------ |
| display:none      | Removed  | Removed  | Cannot animate           |
| visibility:hidden | Reserved | Hidden   | Can animate with opacity |

Q5. Child elements ‡§™‡§∞ opacity apply ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è ‡§Ø‡§æ parent ‡§™‡§∞?

Answer:

Parent ‡§™‡§∞ apply ‡§ï‡§∞‡§®‡•á ‡§∏‡•á ‡§∏‡§≠‡•Ä children affected ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§

Child ‡§Ö‡§≤‡§ó effect ‡§ö‡§æ‡§π‡§ø‡§è ‚Üí individually set ‡§ï‡§∞‡•á‡§Ç‡•§

‚öôÔ∏è 2. Condition-Based Questions
Q6. Hover ‡§™‡§∞ tooltip fade-in ‡§ï‡§∞‡§®‡§æ ‡§π‡•à ‡§≤‡•á‡§ï‡§ø‡§® parent layout shift ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è‡•§ ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á?

Answer:

Use opacity + visibility + position:absolute

Parent space preserved, tooltip floats above.

.tooltip { opacity:0; visibility:hidden; position:absolute; transition:opacity 0.3s; }
.container:hover .tooltip { opacity:1; visibility:visible; }

Q7. Modal fade-in/fade-out ‡§ï‡•á ‡§¶‡•å‡§∞‡§æ‡§® multiple clicks ‡§∏‡•á glitch ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à‡•§ Solution?

Answer:

JS logic: check animation state before adding/removing class

Or use transitionend event to synchronize

Or disable pointer-events during transition

Q8. Responsive design ‡§Æ‡•á‡§Ç fade-in element ‡§ï‡•ã small screens ‡§™‡§∞ differently handle ‡§ï‡§∞‡§®‡§æ ‡§π‡•à‡•§

Answer:

Use media query: reduce distance/opacity effect

@media (max-width:600px){
  .fade-element { transition-duration: 0.2s; }
}

Q9. Low-performance devices ‡§™‡§∞ smooth fade ‡§ï‡•à‡§∏‡•á ensure ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á?

Answer:

Animate only opacity (GPU accelerated)

Avoid width/height transitions

Optionally disable or shorten transitions using prefers-reduced-motion

Q10. Opacity transition delay set ‡§ï‡§∞‡§®‡§æ ‡§π‡•à, hover remove ‡§π‡•ã‡§®‡•á ‡§™‡§∞ ‡§≠‡•Ä delay maintain ‡§ï‡§∞‡§®‡§æ ‡§π‡•à‡•§

Answer:

.element { opacity:0; transition: opacity 0.5s ease 0.2s; }
.element.show { opacity:1; transition-delay:0s; }


Logic: transition-delay ‡§π‡§Æ‡•á‡§∂‡§æ state change timing ‡§ï‡•á ‡§π‡§ø‡§∏‡§æ‡§¨ ‡§∏‡•á set ‡§ï‡§∞‡•á‡§Ç

‚öôÔ∏è 3. Situation-Based Questions
Q11. Tooltip fade-in ‡§™‡§∞ hover ‡§∏‡•á trigger ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à ‡§≤‡•á‡§ï‡§ø‡§® rapid hover/unhover ‡§™‡§∞ flicker ‡§Ü ‡§∞‡§π‡§æ ‡§π‡•à‡•§

Answer:

Use transitionend to finalize state

Optionally use JS debounce to prevent multiple class toggle

Q12. Animated notification banner show/hide ‡§ï‡§∞‡§®‡§æ ‡§π‡•à, space collapse ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è‡•§

Answer:

Use opacity + visibility

Avoid display:none to maintain layout

Optionally add pointer-events:none when hidden

Q13. Element fade-in ‡§π‡•ã‡§§‡•á ‡§∏‡§Æ‡§Ø scroll position preserve ‡§ï‡§∞‡§®‡•Ä ‡§π‡•à‡•§

Answer:

Avoid position:fixed unless necessary

Use absolute/fixed layer only for animation overlay

Main layout remains unchanged

Q14. Keyboard accessibility ‡§ï‡•á ‡§≤‡§ø‡§è fade-in menu ‡§ï‡•à‡§∏‡•á design ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á?

Answer:

Use :focus-visible selector

Ensure opacity:0 element is aria-hidden=true until visible

Enable pointer-events only when visible

Q15. Fade-in elements multiple layers ‡§Æ‡•á‡§Ç sequential appear ‡§ï‡§∞‡§®‡§æ ‡§π‡•à‡•§

Answer:

Use CSS transition-delay stagger

Or JS setTimeout loop or animation-delay with keyframes

‚öôÔ∏è 4. Logic & Mastery-Level Questions
Q16. Opacity 0 ‡§î‡§∞ Visibility hidden ‡§Æ‡•á‡§Ç screen readers response ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•ã‡§ó‡§æ?

Answer:

Opacity 0 ‚Üí screen readers still detect content ‚Üí may confuse

Visibility hidden ‚Üí screen readers ignore content

Best practice: combine with aria-hidden

Q17. Why not animate display:none directly?

Answer:

Display affects layout ‚Üí cannot interpolate values

Solution: animate opacity and visibility for smooth effect

Q18. Parent opacity:0 ‡§™‡§∞ child focus ‡§π‡•ã‡§ó‡§æ ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç?

Answer:

Focus possible, but visually invisible

Use pointer-events:none and/or remove from tab order

Q19. How to ensure smooth fade-out without layout jump?

Answer:

Maintain visibility until transition ends

Use transitionend event to set visibility:hidden

Q20. Advanced Question:

‚Äú‡§Ü‡§™ multiple fade-in/fade-out animations choreograph ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç‡•§ How to maintain smooth sequence?‚Äù

Answer:

Use CSS animation keyframes with animation-delay

Or JS animation queue with animationend event

Or libraries like GSAP Timeline for complex control

‚ö° 5. Quick Best Practices for Interview

Always mention performance: opacity = GPU accelerated, display cannot animate

Accessibility: aria-hidden, pointer-events, focus management

Transition combination: opacity + visibility ‚Üí smooth fade-in/out

Sequence handling: stagger via delay or JS events

Responsive/Condition-based: adjust duration, distance, or disable motion