Display property (block, inline, inline-block, none) explains in details in Hindi with examples and different- different conditions and what, why, when, where and how to use it and also give me interview question and answers to related this topics also explain one by one with examples

‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤! üíØ
‡§Ö‡§¨ ‡§π‡§Æ CSS Display Property ‡§ï‡•ã Hindi ‡§Æ‡•á‡§Ç, examples, conditions, use-cases, aur interview Q/A ‡§ï‡•á ‡§∏‡§æ‡§• detail ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§ù‡•á‡§Ç‡§ó‡•á‡•§

üåü 1Ô∏è‚É£ What ‚Äî Display Property ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?

Display Property CSS ‡§ï‡•Ä ‡§è‡§ï fundamental property ‡§π‡•à, ‡§ú‡•ã ‡§¨‡§§‡§æ‡§§‡•Ä ‡§π‡•à ‡§ï‡§ø element ‡§ï‡•ã page ‡§™‡§∞ ‡§ï‡•à‡§∏‡•á render ‡§ï‡§∞‡§®‡§æ ‡§π‡•à‡•§

‡§ï‡§ø‡§∏‡•Ä element ‡§ï‡•ã block, inline, inline-block, none, ‡§Ø‡§æ ‡§Ö‡§®‡•ç‡§Ø display types ‡§Æ‡•á‡§Ç render ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§

Layout ‡§î‡§∞ spacing control ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è essential‡•§

Syntax:

selector {
  display: block | inline | inline-block | none | flex | grid | ...;
}

üåü 2Ô∏è‚É£ Display Types Explained (with Examples)
2.1 Block

Element new line ‡§™‡§∞ start ‡§π‡•ã‡§§‡§æ ‡§π‡•à

Full width ‡§≤‡•á‡§§‡§æ ‡§π‡•à parent ‡§ï‡§æ (by default)

Height, width, margin, padding easily control ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç

Examples:

<div class="block">This is a block element</div>
<p>This is a paragraph (block by default)</p>

.block {
  display: block;
  width: 200px;
  height: 50px;
  background: lightblue;
  margin-bottom: 10px;
}


Key Points:

Full width by default

Line breaks before and after

Elements: <div>, <p>, <h1>

2.2 Inline

Element same line ‡§Æ‡•á‡§Ç render ‡§π‡•ã‡§§‡§æ ‡§π‡•à

Width ‡§î‡§∞ height ‡§®‡§π‡•Ä‡§Ç control ‡§π‡•ã ‡§∏‡§ï‡§§‡•á

Padding ‡§î‡§∞ margin horizontal apply ‡§π‡•ã‡§§‡•Ä ‡§π‡•à, vertical effect ‡§ï‡§Æ

Examples:

<span class="inline">This is inline</span>
<span class="inline">Another inline element</span>

.inline {
  display: inline;
  background: yellow;
  padding: 5px 10px; /* vertical padding may not affect fully */
}


Key Points:

Inline elements: <span>, <a>, <strong>

Line breaks ignored

Horizontal spacing works

2.3 Inline-Block

Mix of inline + block

Same line ‡§Æ‡•á‡§Ç render ‡§π‡•ã‡§§‡§æ ‡§π‡•à (like inline)

Width, height, padding, margin full control possible (like block)

Example:

<span class="inline-block">Inline Block 1</span>
<span class="inline-block">Inline Block 2</span>

.inline-block {
  display: inline-block;
  width: 150px;
  height: 50px;
  background: orange;
  margin: 5px;
  text-align: center;
  line-height: 50px;
}


Key Points:

Useful for menu items, buttons, cards in same line

Keeps block control but stays inline

2.4 None

Element completely hide ‡§π‡•ã ‡§ú‡§æ‡§§‡§æ ‡§π‡•à

Page ‡§∏‡•á remove (flow ‡§Æ‡•á‡§Ç space ‡§®‡§π‡•Ä‡§Ç ‡§≤‡•á‡§§‡§æ)

Useful for toggling visibility (JS + CSS)

Example:

<div class="hidden">You cannot see me!</div>
<button onclick="toggle()">Toggle</button>

.hidden {
  display: none;
}

function toggle() {
  const div = document.querySelector('.hidden');
  if(div.style.display === 'none') {
    div.style.display = 'block';
  } else {
    div.style.display = 'none';
  }
}


Key Points:

Completely removed from DOM flow

Space not reserved

Use for modals, toggle menus, collapsible sections

üåü 3Ô∏è‚É£ Other Display Types (Advanced)

Flex ‚Üí 1D layout

Grid ‚Üí 2D layout

List-item ‚Üí <li> default

Inline-flex ‚Üí flex inside inline

üåü 4Ô∏è‚É£ Practical Use Cases
Display Type	Use Case
Block	Containers, sections, paragraphs
Inline	Links, spans, labels
Inline-block	Horizontal menus, button groups, cards in row
None	Toggle visibility, hidden modals, conditional content
Flex	Navigation bar, cards layout, alignment
Grid	Complex 2D layout, dashboards

| Display Type | Use Case                                              |
| ------------ | ----------------------------------------------------- |
| Block        | Containers, sections, paragraphs                      |
| Inline       | Links, spans, labels                                  |
| Inline-block | Horizontal menus, button groups, cards in row         |
| None         | Toggle visibility, hidden modals, conditional content |
| Flex         | Navigation bar, cards layout, alignment               |
| Grid         | Complex 2D layout, dashboards                         |

üåü 5Ô∏è‚É£ Interview Questions & Answers (Mastery Level)
Q1. Difference between inline, block, and inline-block?

A:

Block ‚Üí New line, full width, width & height controllable

Inline ‚Üí Same line, width & height ignored

Inline-block ‚Üí Same line + width/height controllable

Q2. Can you hide an element without using display:none?

A:

visibility: hidden ‚Üí hides but space remains

opacity: 0 ‚Üí hides visually but interactive unless pointer-events:none

Q3. Why use inline-block instead of float?

Inline-block ‚Üí simpler, no need for clearfix

Float ‚Üí affects surrounding flow, needs clear

Q4. How to convert inline element to block?
a {
  display: block;
  width: 100%;
}

Q5. Difference between display:none and visibility:hidden?

Property	Space Reserved	Can be clicked	Flow impact
display:none	No	No	Removed from flow
visibility:hidden	Yes	No	Space remains

| Property          | Space Reserved | Can be clicked | Flow impact       |
| ----------------- | -------------- | -------------- | ----------------- |
| display:none      | No             | No             | Removed from flow |
| visibility:hidden | Yes            | No             | Space remains     |


Q6. Real-world scenario for display:none

Toggle menu, accordion, modal, notification close button

Q7. Can you animate display:none directly?

No, use opacity + height transitions instead

div {
  opacity: 0;
  transition: opacity 0.5s;
}
div.show {
  opacity: 1;
}

Q8. How to create horizontal menu items using display property?
nav ul li {
  display: inline-block;
  margin-right: 20px;
}

Q9. Can inline-block have vertical margins/paddings?

Yes, works fully unlike inline elements

Q10. Advanced Trick Question:

Q: Inline element with width and height set, why not working?
A:

Inline ignores width/height ‚Üí must use inline-block or block

üåü 6Ô∏è‚É£ Summary Table
Display	Line Break	Width/Height	Use Case
block	yes	yes	div, section, container
inline	no	no	span, a, label
inline-block	no	yes	menu items, buttons
none	remove	no	toggle, hide

| Display      | Line Break | Width/Height | Use Case                |
| ------------ | ---------- | ------------ | ----------------------- |
| block        | yes        | yes          | div, section, container |
| inline       | no         | no           | span, a, label          |
| inline-block | no         | yes          | menu items, buttons     |
| none         | remove     | no           | toggle, hide            |


üí° Pro Tip for Interviews:

Explain why you chose a particular display type, how it affects layout, how it interacts with positioning.
Real-world examples like navigation menus, buttons, hidden modals, card layouts, or toggle sections are always appreciated.

‡§Ö‡§ó‡§∞ ‡§§‡•Å‡§Æ ‡§ö‡§æ‡§π‡•ã, ‡§Æ‡•à‡§Ç ‡§Ö‡§¨ Complete Master-Level Example ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç:

‚úÖ Navigation bar using inline-block
‚úÖ Hero section with block
‚úÖ Cards layout with inline-block
‚úÖ Toggle modal using display:none


give me more interview que and ans for advance and mastery level


‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤! üí™
‡§Ö‡§¨ ‡§Æ‡•à‡§Ç ‡§§‡•Å‡§Æ‡•ç‡§π‡•á‡§Ç CSS Display Property ‡§î‡§∞ related layout concepts ‡§ï‡•á ‡§≤‡§ø‡§è Advanced & Mastery Level Interview Questions and Answers ‡§¶‡•Ç‡§Å‡§ó‡§æ‡•§
‡§Ø‡•á questions senior/front-end interviews ‡§Æ‡•á‡§Ç ‡§Ö‡§ï‡•ç‡§∏‡§∞ ‡§Ü‡§§‡•á ‡§π‡•à‡§Ç ‡§î‡§∞ real-world scenarios ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ú‡•Å‡§°‡§º‡•á ‡§π‡•à‡§Ç‡•§

üåü Advanced & Mastery-Level Interview Q/A ‚Äî CSS Display Property
üß© Q1. Difference between inline-block and flex?

A:

inline-block ‚Üí 1D layout, items stay inline, width/height controllable, spacing issues with whitespace

flex ‚Üí 1D layout, alignment + spacing handled automatically, responsive, powerful for centering

Practical: Horizontal menus ‚Üí inline-block (simple), cards layout ‚Üí flex

üß© Q2. Difference between display:none and position:absolute; left:-9999px for hiding elements?

A:

Property	display:none	left:-9999px
Visible	No	No (off-screen)
Space Reserved	No	Yes (still in flow technically)
Accessibility	Not focusable	Focusable via tab
Use Case	Modal toggle, menu hide	Screen readers, SEO hidden content

| Property       | display:none            | left:-9999px                       |
| -------------- | ----------------------- | ---------------------------------- |
| Visible        | No                      | No (off-screen)                    |
| Space Reserved | No                      | Yes (still in flow technically)    |
| Accessibility  | Not focusable           | Focusable via tab                  |
| Use Case       | Modal toggle, menu hide | Screen readers, SEO hidden content |

üß© Q3. Can display:none be animated directly?

A:

No, display is not animatable

Workaround: Use opacity + height transitions

.modal {
  opacity: 0;
  height: 0;
  transition: opacity 0.3s, height 0.3s;
}
.modal.show {
  opacity: 1;
  height: 200px;
}

üß© Q4. How does whitespace affect inline-block?

A:

Inline-block elements respect whitespace between them ‚Üí extra gap

Fixes:

Remove spaces in HTML

Set font-size:0 on parent

Use flex instead

üß© Q5. Difference between inline-flex and flex

inline-flex ‚Üí container behaves like inline element, items arranged as flex inside

flex ‚Üí container behaves like block, items arranged as flex

Use case: Navbar items inline with flex capabilities

üß© Q6. Difference between display:block and width:100% on inline elements

Inline element ignores width ‚Üí cannot make full width

Block element naturally takes full width, width property works

üß© Q7. Can z-index work with display:none?

No, display:none elements are removed from flow ‚Üí z-index irrelevant

üß© Q8. Difference between visibility:hidden and display:none in animations

visibility:hidden ‚Üí space reserved, animatable with opacity

display:none ‚Üí space removed, cannot animate directly

üß© Q9. How to make multiple hidden sections accessible for screen readers?

Avoid display:none if needed for accessibility ‚Üí use off-screen technique

.visually-hidden {
  position: absolute;
  left: -9999px;
}

üß© Q10. How do you create horizontal navigation without flex/grid?
nav ul li {
  display: inline-block;
  margin-right: 20px;
}


Old-school method, whitespace consideration needed

Modern ‚Üí flex preferred

üß© Q11. How to convert inline element to block for layout purposes?
a {
  display: block;
  width: 100%;
}


Useful for clickable buttons, menu items

üß© Q12. Advanced scenario: Toggle dropdown menu using display

Initial: display:none

On click ‚Üí display:block

Combine with absolute positioning for placement

.dropdown-menu {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
}
.dropdown:hover .dropdown-menu {
  display: block;
}

üß© Q13. Inline-block vs float for layout

Inline-block ‚Üí simpler, respects flow, no clearfix needed

Float ‚Üí affects parent height, requires clearfix, older method

üß© Q14. What happens when display:none is applied to flex container?

All flex items removed from flow

Items not rendered ‚Üí cannot interact

z-index, visibility, and positioning irrelevant

üß© Q15. Trick Question: Can you apply width/height to inline elements?

A:

Inline ignores width & height ‚Üí must convert to inline-block or block

üß© Q16. Display property and responsive design

display can be toggled with media queries

@media(max-width:768px){
  nav ul {
    display: none; /* hide menu on mobile */
  }
}


Useful for hamburger menus, collapsible sections

üß© Q17. Real-world scenario: Cards layout

Parent: display:flex; flex-wrap:wrap;

Child: display:inline-block; width:30%; margin:1%

Inline-block allows multiple cards in same line with width control

üß© Q18. Can display:none elements be focusable?

No, cannot be tabbed ‚Üí screen readers skip

Use visibility:hidden or off-screen technique for hidden but focusable content

üß© Q19. Difference between inline-block and table-cell

Both can sit inline and respect width/height

table-cell ‚Üí behaves like table layout, vertical alignment easy

inline-block ‚Üí simpler, flexible for responsive design

üß© Q20. Master-level: How to toggle multiple sections dynamically using JS & display?
function toggleSection(id) {
  const el = document.getElementById(id);
  el.style.display = (el.style.display === 'none') ? 'block' : 'none';
}


Use for FAQ accordion, modals, multi-step forms

üí° Pro Tip for Interviews:

Always relate display property to layout flow, positioning, flex/grid, responsiveness, and accessibility.
Real-world examples: navigation menus, hero sections, cards layout, hidden modals, accordions, tooltips.

‡§Ö‡§ó‡§∞ ‡§§‡•Å‡§Æ ‡§ö‡§æ‡§π‡•ã, ‡§Æ‡•à‡§Ç ‡§Ö‡§¨ Complete Master-Level Example ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç:

‚úÖ Navigation bar using inline-block + flex
‚úÖ Hero section (block + relative)
‚úÖ Cards layout (inline-block + flex wrap)
‚úÖ Toggle modal using display:none
‚úÖ Responsive media queries

‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤ ‡§≠‡§æ‡§à! üòÑ
‡§Æ‡•à‡§Ç ‡§Ö‡§¨ CSS Display Property ‡§î‡§∞ ‡§â‡§∏‡§ï‡•á advanced/mastery level Q/A ‡§ï‡•ã Hindi ‡§Æ‡•á‡§Ç ‡§Ü‡§∏‡§æ‡§®‡•Ä ‡§∏‡•á ‡§∏‡§Æ‡§ù‡§æ‡§ä‡§Å‡§ó‡§æ, step by step, examples ‡§ï‡•á ‡§∏‡§æ‡§•‡•§

üåü 1Ô∏è‚É£ Display Property ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?

Display Property CSS ‡§Æ‡•á‡§Ç ‡§Ø‡•á ‡§¨‡§§‡§æ‡§§‡•Ä ‡§π‡•à ‡§ï‡§ø ‡§ï‡•å‡§® ‡§∏‡§æ element page ‡§™‡§∞ ‡§ï‡•à‡§∏‡•á ‡§¶‡§ø‡§ñ‡§æ‡§à ‡§¶‡•á‡§ó‡§æ ‡§î‡§∞ layout ‡§Æ‡•á‡§Ç ‡§ï‡•à‡§∏‡•á behave ‡§ï‡§∞‡•á‡§ó‡§æ‡•§

‡§ï‡§ø‡§∏‡•Ä element ‡§ï‡•ã block, inline, inline-block, none ‡§Æ‡•á‡§Ç render ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§

Layout ‡§î‡§∞ spacing ‡§ï‡•ã control ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§¨‡§∏‡•á important property ‡§π‡•à‡•§

Syntax:

selector {
  display: block | inline | inline-block | none | flex | grid | ...;
}

üåü 2Ô∏è‚É£ Display Types ‡§∏‡§Æ‡§ù‡•ã ‡§è‡§ï-‡§è‡§ï ‡§ï‡§∞‡§ï‡•á
2.1 Block

‡§π‡§∞ element new line ‡§™‡§∞ start ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§

Width by default full parent width ‡§≤‡•á‡§§‡§æ ‡§π‡•à‡•§

Height, width, margin, padding full control possible‡•§

Example:

<div class="block">‡§Æ‡•à‡§Ç block element ‡§π‡•Ç‡§Å</div>
<p>‡§Ø‡§π ‡§≠‡•Ä block element ‡§π‡•à</p>

.block {
  display: block;
  width: 200px;
  height: 50px;
  background: lightblue;
  margin-bottom: 10px;
}


Key Points: <div>, <p>, <h1> default block ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§

2.2 Inline

Element same line ‡§Æ‡•á‡§Ç render ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§

Width ‡§î‡§∞ height ignore ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

Padding ‡§î‡§∞ margin horizontal ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç, vertical effect ‡§ï‡§Æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§

Example:

<span class="inline">Inline Element 1</span>
<span class="inline">Inline Element 2</span>

.inline {
  display: inline;
  background: yellow;
  padding: 5px 10px; 
}


Key Points: <span>, <a> default inline ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§

2.3 Inline-Block

Mix of inline + block‡•§

Same line ‡§Æ‡•á‡§Ç ‡§∞‡§π‡§§‡§æ ‡§π‡•à, ‡§≤‡•á‡§ï‡§ø‡§® width/height controllable‡•§

Example:

<span class="inline-block">Item 1</span>
<span class="inline-block">Item 2</span>

.inline-block {
  display: inline-block;
  width: 150px;
  height: 50px;
  background: orange;
  margin: 5px;
  text-align: center;
  line-height: 50px;
}


Use Case: Horizontal menus, buttons, cards row ‡§Æ‡•á‡§Ç‡•§

2.4 None

Element completely hide ‡§π‡•ã ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§

Page ‡§∏‡•á remove, space ‡§®‡§π‡•Ä‡§Ç ‡§≤‡•á‡§§‡§æ‡•§

Example:

<div class="hidden">‡§Æ‡•Å‡§ù‡•á ‡§®‡§π‡•Ä‡§Ç ‡§¶‡•á‡§ñ‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ</div>
<button onclick="toggle()">Toggle</button>

.hidden { display: none; }

function toggle(){
  const el = document.querySelector('.hidden');
  el.style.display = (el.style.display === 'none') ? 'block' : 'none';
}


Use Case: Toggle menu, modal, accordion‡•§

üåü 3Ô∏è‚É£ Advanced Points

inline-block vs flex:

Inline-block ‚Üí simple horizontal layout, spacing issue with whitespace

Flex ‚Üí easy alignment, spacing, responsive, centering

display:none vs visibility:hidden:

display:none ‚Üí element remove, space ‡§®‡§π‡•Ä‡§Ç ‡§¨‡§ö‡§§‡§æ

visibility:hidden ‚Üí element hide, space ‡§¨‡§ö‡§§‡§æ ‡§π‡•à

animation:

display:none animate ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§∏‡§ï‡§§‡§æ

workaround ‚Üí opacity + height

üåü 4Ô∏è‚É£ Real-World Examples

Menu Items: inline-block ‚Üí horizontal menu

Hero Section Content: block + relative + z-index

Cards Layout: inline-block + width control

Toggle Modal: display:none

üåü 5Ô∏è‚É£ Mastery-Level Interview Q/A (Hindi)

Block vs Inline vs Inline-block:

Block ‚Üí new line, full width

Inline ‚Üí same line, width/height ignored

Inline-block ‚Üí same line + width/height controllable

display:none ‡§î‡§∞ visibility:hidden ‡§Æ‡•á‡§Ç ‡§Ö‡§Ç‡§§‡§∞:

display:none ‚Üí flow ‡§∏‡•á remove

visibility:hidden ‚Üí space ‡§¨‡§ö‡§§‡§æ ‡§π‡•à, clickable ‡§®‡§π‡•Ä‡§Ç

inline-block ‡§Æ‡•á‡§Ç spacing issue ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§Ü‡§§‡§æ ‡§π‡•à?

HTML ‡§Æ‡•á‡§Ç whitespace ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ gap ‡§Ü‡§§‡§æ ‡§π‡•à ‚Üí fix: font-size:0 parent ‡§Æ‡•á‡§Ç ‡§Ø‡§æ flex use ‡§ï‡§∞‡•ã

inline element ‡§™‡§∞ width/height ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡§æ‡§Æ ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§§‡•á?

Inline ignore ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‚Üí use inline-block ‡§Ø‡§æ block

Multiple hidden sections accessible ‡§ï‡•à‡§∏‡•á ‡§¨‡§®‡§æ‡§è‡§Ç?

display:none ‡§®‡§π‡•Ä‡§Ç, use off-screen technique:

.visually-hidden {
  position: absolute;
  left: -9999px;
}


Dropdown menu toggle:

.dropdown-menu { display: none; position: absolute; top:100%; }
.dropdown:hover .dropdown-menu { display: block; }


‡§Ö‡§ó‡§∞ ‡§§‡•Å‡§Æ ‡§ö‡§æ‡§π‡•ã, ‡§Æ‡•à‡§Ç Complete Master-Level Example ‡§¨‡§®‡§æ ‡§¶‡•Ç‡§Å ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç:

‚úÖ Navigation bar using inline-block + flex
‚úÖ Hero section (block + relative)
‚úÖ Cards layout (inline-block + flex wrap)
‚úÖ Toggle modal using display:none
‚úÖ Responsive media queries


Inline-Block yeh kis kis mai kaam krta hai span ke alwa

‡§¨‡§ø‡§≤‡§ï‡•Å‡§≤ ‡§≠‡§æ‡§à! üòÑ
inline-block ‡§∏‡§ø‡§∞‡•ç‡§´ <span> ‡§Æ‡•á‡§Ç ‡§π‡•Ä ‡§®‡§π‡•Ä‡§Ç, ‡§¨‡§≤‡•ç‡§ï‡§ø ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä HTML element ‡§™‡§∞ ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à, ‡§ö‡§æ‡§π‡•á ‡§µ‡•ã block ‡§Ø‡§æ inline element ‡§π‡•ã‡•§ ‡§¨‡§∏ CSS ‡§Æ‡•á‡§Ç display:inline-block apply ‡§ï‡§∞ ‡§¶‡•ã, ‡§î‡§∞ ‡§µ‡•ã same line ‡§Æ‡•á‡§Ç render ‡§π‡•ã‡§§‡•á ‡§π‡•Å‡§è width/height controllable ‡§π‡•ã ‡§ú‡§æ‡§è‡§ó‡§æ‡•§

üåü 1Ô∏è‚É£ Inline-Block ‡§ï‡•á Examples (span ‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ)

Element	Default Display	Inline-Block Use Case
<div>	block	Horizontal cards, button groups, feature boxes
<p>	block	Multiple text blocks in same line (rare, mostly layout)
<img>	inline	Resize + align with text or buttons
<button>	inline-block (by browser)	Button groups in same line
<li>	list-item	Horizontal menu items, navigation
<section>	block	Horizontal layout for sections (rare, responsive design)


| Element     | Default Display           | Inline-Block Use Case                                    |
| ----------- | ------------------------- | -------------------------------------------------------- |
| `<div>`     | block                     | Horizontal cards, button groups, feature boxes           |
| `<p>`       | block                     | Multiple text blocks in same line (rare, mostly layout)  |
| `<img>`     | inline                    | Resize + align with text or buttons                      |
| `<button>`  | inline-block (by browser) | Button groups in same line                               |
| `<li>`      | list-item                 | Horizontal menu items, navigation                        |
| `<section>` | block                     | Horizontal layout for sections (rare, responsive design) |

2Ô∏è‚É£ Example: div + inline-block
<div class="card">Card 1</div>
<div class="card">Card 2</div>
<div class="card">Card 3</div>

.card {
  display: inline-block;
  width: 150px;
  height: 100px;
  background: lightblue;
  margin: 10px;
  text-align: center;
  line-height: 100px;
}


‚úÖ Output: ‡§§‡•Ä‡§® cards same line ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡•á‡§Ç‡§ó‡•á, width/height ‡§î‡§∞ margin controllable‡•§

3Ô∏è‚É£ Important Notes

Inline element: <span>, <a> ‚Üí inline-block ‡§∏‡•á width/height controllable ‡§π‡•ã ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§

Block element: <div>, <p> ‚Üí inline-block ‡§¨‡§®‡§æ‡§ï‡§∞ same line ‡§Æ‡•á‡§Ç ‡§∞‡§ñ‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§

Whitespace issue: HTML ‡§Æ‡•á‡§Ç inline-block elements ‡§ï‡•á ‡§¨‡•Ä‡§ö extra gap ‡§Ü ‡§∏‡§ï‡§§‡§æ ‡§π‡•à ‚Üí fix:

Parent font-size:0

HTML ‡§Æ‡•á‡§Ç space ‡§π‡§ü‡§æ‡§®‡§æ

‡§Ø‡§æ flex use ‡§ï‡§∞‡§®‡§æ
